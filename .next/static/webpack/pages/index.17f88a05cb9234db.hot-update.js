"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./src/pages/index.tsx":
/*!*****************************!*\
  !*** ./src/pages/index.tsx ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __N_SSP: function() { return /* binding */ __N_SSP; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n// pages/index.tsx (или другой файл страницы)\n\nconst MyApp = (param)=>{\n    let { users } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}, void 0, false);\n};\n_c = MyApp;\nvar __N_SSP = true;\n/* harmony default export */ __webpack_exports__[\"default\"] = (MyApp);\n/* \r\nimport App from '../App';\r\nimport Providers from '../redux/Provider';\r\nimport { GetServerSidePropsContext } from 'next';\r\nimport axios from 'axios';\r\n import { SearchPageProps } from './searchTypes';\r\n\r\n\r\n \r\ntype UserDataArray = Array<{\r\n\tlogin: string;\r\n\tid: number;\r\n\tnode_id: string;\r\n\tavatar_url: string;\r\n\tgravatar_id: string;\r\n\turl: string;\r\n\thtml_url: string;\r\n\tfollowers_url: string;\r\n\tfollowing_url: string;\r\n\tgists_url: string;\r\n\tstarred_url: string;\r\n\tsubscriptions_url: string;\r\n\torganizations_url: string;\r\n\trepos_url: string;\r\n\tevents_url: string;\r\n\treceived_events_url: string;\r\n\ttype: string;\r\n\tsite_admin: boolean;\r\n\tscore: number;\r\n}>;\r\nfunction MyApp(\r\n\tusers: UserDataArray\r\n//\t{ query }: SearchPageProps\r\n) {\r\n\tconsole.log(users)\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Providers>\r\n\t\t\t\tfe\r\n\t\t\t\t<App />\r\n\t\t\t \r\n\t\t\t \r\n\t\t\t</Providers>\r\n\t\t</>\r\n\t);\r\n}\r\n//export { getServerSideProps };\r\nexport default MyApp;\r\n\r\n\r\nasync function getServerSideProps(context: GetServerSidePropsContext) {\r\n    const { query } = context;\r\n    const page = parseInt(query.page as string, 10) || 1;\r\n    console.log(\"PAGE\", page);\r\n  \r\n    const limit = 10;\r\n    try {\r\n      const res = await axios.get(`https://api.github.com/users?per_page=${limit}&page=${page}`);\r\n      const users: UserDataArray = res.data;\r\n      console.log(\"USERS\", users);\r\n  \r\n      return {\r\n      //  props: {\r\n          users, // передаем данные в компонент\r\n       // },\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error fetching users:\", error);\r\n      return {\r\n    //    props: {\r\n          users: [], // в случае ошибки возвращаем пустой массив\r\n      //  },\r\n      };\r\n    }\r\n  }\r\n\r\n*/ /*\r\n\r\nexport type UserDataArrayApi = Array<{\r\n\tlogin: string;\r\n\tid: number;\r\n\tnode_id: string;\r\n\tavatar_url: string;\r\n\tgravatar_id: string;\r\n\turl: string;\r\n\thtml_url: string;\r\n\tfollowers_url: string;\r\n\tfollowing_url: string;\r\n\tgists_url: string;\r\n\tstarred_url: string;\r\n\tsubscriptions_url: string;\r\n\torganizations_url: string;\r\n\trepos_url: string;\r\n\tevents_url: string;\r\n\treceived_events_url: string;\r\n\ttype: string;\r\n\tsite_admin: boolean;\r\n\tscore: number;\r\n}>;\r\nexport interface UserDataApi {\r\n\ttotal_count: number;\r\n\tincomplete_results: boolean;\r\n\titems: UserDataArrayApi;\r\n}\r\n\r\n\r\nexport async function fetchUserDataAdvanced(url: string): Promise<UserDataApi> {\r\n\ttry {\r\n\t\tconst response: AxiosResponse<UserDataApi> = await axios.get(url);\r\n\t\treturn response.data;\r\n\t} catch (error) {\r\n\t\tif (axios.isAxiosError(error)) {\r\n\t\t\tconst axiosError = error as AxiosError;\r\n\t\t\tconsole.error('Error fetching data:', axiosError.message);\r\n\t\t} else {\r\n\t\t\tconsole.error('Unknown error:', error);\r\n\t\t}\r\n\t\tthrow new Error('Error fetching data');\r\n\t}\r\n}\r\nexport interface ApiResp {\r\n\tprops: {\r\n\t\tusers: UserDataArrayApi\r\n\t}\r\n}\r\nexport async function getServerSideProps(limit: number, offset: number, typedValue: string): Promise<ApiResp> {\r\n\tlet url: string;\r\n\tif (typedValue && typedValue.trim() === '') {\r\n\t\turl = `https://api.github.com/search/users?q=type:user&page=${offset}&per_page=${limit}`;\r\n\t\ttry {\r\n\t\t\tconst data = await fetchUserDataAdvanced(url);\r\n\t\t\tconsole.log('Data:', data);\r\n\t\t\treturn {\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tusers: data.items\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t} else {\r\n\t\turl = `https://api.github.com/search/users?q=${typedValue}&page=${offset}&per_page=${limit}`;\r\n\t\ttry {\r\n\t\t\tconst data = await fetchUserDataAdvanced(url);\r\n\t\t\tconsole.log('Data:', data);\r\n\t\t\t//\treturn data.items;\r\n\r\n\r\n\t\t\treturn {\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tusers: data.items\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n}\r\n*/ /*\r\nimport type { InferGetServerSidePropsType, GetServerSideProps } from 'next'\r\n\r\nimport { Outlet } from \"react-router-dom\";\r\nimport App from \"../App\";\r\nimport Layout from \"../components/Layout\";\r\nimport Providers from \"../redux/Provider\";\r\n \r\nimport { useAppDispatch } from \"../hooks/redux\";\r\nimport { setTesting } from \"../redux/slices/postsSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n \r\ntype Repo = {\r\n  name: string\r\n  stargazers_count: number\r\n}\r\n \r\nexport const getServerSideProps = (async () => {\r\n  // Fetch data from external API\r\n  const res = await fetch('https://api.github.com/repos/vercel/next.js')\r\n  const repo: Repo = await res.json()\r\n\r\n  console.log(\"res\", res)\r\n  // Pass data to the page via props\r\n  return { props: { repo } }\r\n}) satisfies GetServerSideProps<{ repo: Repo }>\r\n \r\n\r\n\r\nfunction MyApp(\r\n\t{\r\n\t\trepo,\r\n\t  }: InferGetServerSidePropsType<typeof getServerSideProps>\r\n) {\r\n\r\n const handleClich = () => {\r\n\r\n }\t\r\n\treturn (\r\n\t<> \t\r\n<Providers>\r\n\r\n<p>{repo.stargazers_count}</p>\r\n\t<App />  \r\n</Providers>\t\r\n \r\n \r\n\t</>\r\n\t);\r\n}\r\nexport default MyApp;\r\n\r\n*/ {}var _c;\n$RefreshReg$(_c, \"MyApp\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/index.tsx\n"));

/***/ })

});