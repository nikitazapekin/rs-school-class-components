/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/test",{

/***/ "./src/pages/test/index.jsx":
/*!**********************************!*\
  !*** ./src/pages/test/index.jsx ***!
  \**********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("/*\r\nexport async function getPosts() {\r\n\r\n  const res = await fetch('https://api.example.com/...');\r\n  return res.json();\r\n\r\n}\r\n\r\nimport BlogPostList from '../components/BlogPostList'\r\n \r\n\r\nexport async function getPosts() {\r\n\r\n  const res = await fetch('https://api.example.com/...');\r\n  return res.json();\r\n\r\n}\r\n\r\n \r\nexport default async function Home() {\r\n\r\n  const posts = await getPosts(); \r\n\r\n  return (\r\n    <div>\r\n      <BlogPostList posts={posts}/>\r\n    </div>\r\n    \r\n  )\r\n}\r\n*/ /*\r\n// pages/index.js\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useRouter } from 'next/router';\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { page = 1 } = context.query;\r\n  const per_page = 10;\r\nconsole.log(page)\r\n  const response = await axios.get(`https://api.github.com/users`, {\r\n    params: { page, per_page }\r\n  });\r\n\r\n  return {\r\n    props: {\r\n      users: response.data,\r\n      page: Number(page),\r\n      per_page\r\n    }\r\n  };\r\n}\r\n\r\nexport default function Home({ users, page, per_page }) {\r\n  const router = useRouter();\r\n  const [currentPage, setCurrentPage] = useState(page);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n    router.push(`/test?page=${newPage}`);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>GitHub Users</h1>\r\n      <ul>\r\n        {users.map((user) => (\r\n          <li key={user.id}>\r\n          {users.login}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        {currentPage > 1 && (\r\n          <button onClick={() => handlePageChange(currentPage - 1)}>Previous</button>\r\n        )}\r\n        <span>Page {currentPage}</span>\r\n        {users.length === per_page && (\r\n          <button onClick={() => handlePageChange(currentPage + 1)}>Next</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n*/ /* \r\n// pages/users.js\r\nimport React from 'react';\r\nimport Link from 'next/link';\r\n\r\nconst Users = ({ users, page }) => {\r\n  return (\r\n    <div>\r\n      <h1>GitHub Users</h1>\r\n      <ul>\r\n        {users.map((user) => (\r\n          <li key={user.id}>{user.login}</li>\r\n        ))}\r\n      </ul>\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '20px' }}>\r\n        {page > 1 && (\r\n          <Link href={`/test?page=${page - 1}`}>\r\n          Previous\r\n          </Link>\r\n        )}\r\n        <Link href={`/test?page=${page + 1}`}>\r\n        Next\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { page = 1 } = context.query;\r\n\r\n  try {\r\n    const res = await fetch(`https://api.github.com/users?per_page=10&page=${page}`);\r\n    if (!res.ok) {\r\n      throw new Error('Failed to fetch');\r\n    }\r\n    const users = await res.json();\r\n\r\n    return {\r\n      props: {\r\n        users,\r\n        page: Number(page),\r\n      },\r\n    };\r\n  } catch (error) {\r\n    console.error(error);\r\n    return {\r\n      props: {\r\n        users: [],\r\n        page: Number(page),\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nexport default Users;\r\n\r\n\r\n*/ /*\r\nimport { useRouter } from 'next/router';\r\n\r\nasync function getPostsByPage(page) {\r\n  \r\n  const postsPerPage = 5;\r\n  const totalPosts = 50;  \r\n  const posts = Array.from({ length: postsPerPage }, (_, i) => ({\r\n    id: i + 1 + (page - 1) * postsPerPage,\r\n    title: `Post ${i + 1 + (page - 1) * postsPerPage}`\r\n  }));\r\n\r\n  return {\r\n    posts,\r\n    totalPages: Math.ceil(totalPosts / postsPerPage)\r\n  };\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { query } = context;\r\n  const page = parseInt(query.page, 10) || 1;  \r\n  console.log(\"PAG\", page)\r\n  const response = await fetch(`https://api.github.com/users?per_page=${10}&page=${page}`);\r\n  const users = await response.json();\r\n\r\n  console.log(\"USERRRRRRRRRRRRRSS\", users[0])\r\n  const { posts, totalPages } = await getPostsByPage(page);\r\n\r\n  return {\r\n    props: { posts, page, totalPages }\r\n  };\r\n}\r\n\r\nexport default function PostsPage({ posts, page, totalPages }) {\r\n  const router = useRouter();\r\n\r\n  const handlePageChange = (newPage) => {\r\n    if (newPage > 0 && newPage <= totalPages) {\r\n      router.push(`/test?page=${newPage}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Posts - Page {page}</h1>\r\n      <ul>\r\n        {posts.map(post => (\r\n          <li key={post.id}>{post.title}</li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <button onClick={() => handlePageChange(page - 1)} disabled={page === 1}>\r\n          Previous\r\n        </button>\r\n        <span> Page {page} of {totalPages} </span>\r\n        <button onClick={() => handlePageChange(page + 1)} disabled={page === totalPages}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n} \r\n\r\n*/ \n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGFnZXMvdGVzdC9pbmRleC5qc3giLCJtYXBwaW5ncyI6IkFBS0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQThCQSxHQUdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFzREEsR0FFQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQTBEQSxHQU1BOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErREEsR0E3TkEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3BhZ2VzL3Rlc3QvaW5kZXguanN4P2M1OTAiXSwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG5cclxuXHJcblxyXG4vKlxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0UG9zdHMoKSB7XHJcblxyXG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS5leGFtcGxlLmNvbS8uLi4nKTtcclxuICByZXR1cm4gcmVzLmpzb24oKTtcclxuXHJcbn1cclxuXHJcbmltcG9ydCBCbG9nUG9zdExpc3QgZnJvbSAnLi4vY29tcG9uZW50cy9CbG9nUG9zdExpc3QnXHJcbiBcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRQb3N0cygpIHtcclxuXHJcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLmV4YW1wbGUuY29tLy4uLicpO1xyXG4gIHJldHVybiByZXMuanNvbigpO1xyXG5cclxufVxyXG5cclxuIFxyXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBIb21lKCkge1xyXG5cclxuICBjb25zdCBwb3N0cyA9IGF3YWl0IGdldFBvc3RzKCk7IFxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdj5cclxuICAgICAgPEJsb2dQb3N0TGlzdCBwb3N0cz17cG9zdHN9Lz5cclxuICAgIDwvZGl2PlxyXG4gICAgXHJcbiAgKVxyXG59XHJcbiovXHJcblxyXG5cclxuLypcclxuLy8gcGFnZXMvaW5kZXguanNcclxuaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7XHJcbmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gJ25leHQvcm91dGVyJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTZXJ2ZXJTaWRlUHJvcHMoY29udGV4dCkge1xyXG4gIGNvbnN0IHsgcGFnZSA9IDEgfSA9IGNvbnRleHQucXVlcnk7XHJcbiAgY29uc3QgcGVyX3BhZ2UgPSAxMDtcclxuY29uc29sZS5sb2cocGFnZSlcclxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGF4aW9zLmdldChgaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS91c2Vyc2AsIHtcclxuICAgIHBhcmFtczogeyBwYWdlLCBwZXJfcGFnZSB9XHJcbiAgfSk7XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBwcm9wczoge1xyXG4gICAgICB1c2VyczogcmVzcG9uc2UuZGF0YSxcclxuICAgICAgcGFnZTogTnVtYmVyKHBhZ2UpLFxyXG4gICAgICBwZXJfcGFnZVxyXG4gICAgfVxyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhvbWUoeyB1c2VycywgcGFnZSwgcGVyX3BhZ2UgfSkge1xyXG4gIGNvbnN0IHJvdXRlciA9IHVzZVJvdXRlcigpO1xyXG4gIGNvbnN0IFtjdXJyZW50UGFnZSwgc2V0Q3VycmVudFBhZ2VdID0gdXNlU3RhdGUocGFnZSk7XHJcblxyXG4gIGNvbnN0IGhhbmRsZVBhZ2VDaGFuZ2UgPSAobmV3UGFnZSkgPT4ge1xyXG4gICAgc2V0Q3VycmVudFBhZ2UobmV3UGFnZSk7XHJcbiAgICByb3V0ZXIucHVzaChgL3Rlc3Q/cGFnZT0ke25ld1BhZ2V9YCk7XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXY+XHJcbiAgICAgIDxoMT5HaXRIdWIgVXNlcnM8L2gxPlxyXG4gICAgICA8dWw+XHJcbiAgICAgICAge3VzZXJzLm1hcCgodXNlcikgPT4gKFxyXG4gICAgICAgICAgPGxpIGtleT17dXNlci5pZH0+XHJcbiAgICAgICAgICB7dXNlcnMubG9naW59XHJcbiAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICkpfVxyXG4gICAgICA8L3VsPlxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIHtjdXJyZW50UGFnZSA+IDEgJiYgKFxyXG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBoYW5kbGVQYWdlQ2hhbmdlKGN1cnJlbnRQYWdlIC0gMSl9PlByZXZpb3VzPC9idXR0b24+XHJcbiAgICAgICAgKX1cclxuICAgICAgICA8c3Bhbj5QYWdlIHtjdXJyZW50UGFnZX08L3NwYW4+XHJcbiAgICAgICAge3VzZXJzLmxlbmd0aCA9PT0gcGVyX3BhZ2UgJiYgKFxyXG4gICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBoYW5kbGVQYWdlQ2hhbmdlKGN1cnJlbnRQYWdlICsgMSl9Pk5leHQ8L2J1dHRvbj5cclxuICAgICAgICApfVxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn1cclxuKi9cclxuXHJcbi8qIFxyXG4vLyBwYWdlcy91c2Vycy5qc1xyXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgTGluayBmcm9tICduZXh0L2xpbmsnO1xyXG5cclxuY29uc3QgVXNlcnMgPSAoeyB1c2VycywgcGFnZSB9KSA9PiB7XHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXY+XHJcbiAgICAgIDxoMT5HaXRIdWIgVXNlcnM8L2gxPlxyXG4gICAgICA8dWw+XHJcbiAgICAgICAge3VzZXJzLm1hcCgodXNlcikgPT4gKFxyXG4gICAgICAgICAgPGxpIGtleT17dXNlci5pZH0+e3VzZXIubG9naW59PC9saT5cclxuICAgICAgICApKX1cclxuICAgICAgPC91bD5cclxuICAgICAgPGRpdiBzdHlsZT17eyBkaXNwbGF5OiAnZmxleCcsIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbicsIG1hcmdpblRvcDogJzIwcHgnIH19PlxyXG4gICAgICAgIHtwYWdlID4gMSAmJiAoXHJcbiAgICAgICAgICA8TGluayBocmVmPXtgL3Rlc3Q/cGFnZT0ke3BhZ2UgLSAxfWB9PlxyXG4gICAgICAgICAgUHJldmlvdXNcclxuICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICApfVxyXG4gICAgICAgIDxMaW5rIGhyZWY9e2AvdGVzdD9wYWdlPSR7cGFnZSArIDF9YH0+XHJcbiAgICAgICAgTmV4dFxyXG4gICAgICAgIDwvTGluaz5cclxuICAgICAgPC9kaXY+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFNlcnZlclNpZGVQcm9wcyhjb250ZXh0KSB7XHJcbiAgY29uc3QgeyBwYWdlID0gMSB9ID0gY29udGV4dC5xdWVyeTtcclxuXHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS5naXRodWIuY29tL3VzZXJzP3Blcl9wYWdlPTEwJnBhZ2U9JHtwYWdlfWApO1xyXG4gICAgaWYgKCFyZXMub2spIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdGYWlsZWQgdG8gZmV0Y2gnKTtcclxuICAgIH1cclxuICAgIGNvbnN0IHVzZXJzID0gYXdhaXQgcmVzLmpzb24oKTtcclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBwcm9wczoge1xyXG4gICAgICAgIHVzZXJzLFxyXG4gICAgICAgIHBhZ2U6IE51bWJlcihwYWdlKSxcclxuICAgICAgfSxcclxuICAgIH07XHJcbiAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgcHJvcHM6IHtcclxuICAgICAgICB1c2VyczogW10sXHJcbiAgICAgICAgcGFnZTogTnVtYmVyKHBhZ2UpLFxyXG4gICAgICB9LFxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IFVzZXJzO1xyXG5cclxuXHJcbiovXHJcblxyXG5cclxuXHJcblxyXG5cclxuLypcclxuaW1wb3J0IHsgdXNlUm91dGVyIH0gZnJvbSAnbmV4dC9yb3V0ZXInO1xyXG5cclxuYXN5bmMgZnVuY3Rpb24gZ2V0UG9zdHNCeVBhZ2UocGFnZSkge1xyXG4gIFxyXG4gIGNvbnN0IHBvc3RzUGVyUGFnZSA9IDU7XHJcbiAgY29uc3QgdG90YWxQb3N0cyA9IDUwOyAgXHJcbiAgY29uc3QgcG9zdHMgPSBBcnJheS5mcm9tKHsgbGVuZ3RoOiBwb3N0c1BlclBhZ2UgfSwgKF8sIGkpID0+ICh7XHJcbiAgICBpZDogaSArIDEgKyAocGFnZSAtIDEpICogcG9zdHNQZXJQYWdlLFxyXG4gICAgdGl0bGU6IGBQb3N0ICR7aSArIDEgKyAocGFnZSAtIDEpICogcG9zdHNQZXJQYWdlfWBcclxuICB9KSk7XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBwb3N0cyxcclxuICAgIHRvdGFsUGFnZXM6IE1hdGguY2VpbCh0b3RhbFBvc3RzIC8gcG9zdHNQZXJQYWdlKVxyXG4gIH07XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRTZXJ2ZXJTaWRlUHJvcHMoY29udGV4dCkge1xyXG4gIGNvbnN0IHsgcXVlcnkgfSA9IGNvbnRleHQ7XHJcbiAgY29uc3QgcGFnZSA9IHBhcnNlSW50KHF1ZXJ5LnBhZ2UsIDEwKSB8fCAxOyAgXHJcbiAgY29uc29sZS5sb2coXCJQQUdcIiwgcGFnZSlcclxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwczovL2FwaS5naXRodWIuY29tL3VzZXJzP3Blcl9wYWdlPSR7MTB9JnBhZ2U9JHtwYWdlfWApO1xyXG4gIGNvbnN0IHVzZXJzID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG5cclxuICBjb25zb2xlLmxvZyhcIlVTRVJSUlJSUlJSUlJSUlJTU1wiLCB1c2Vyc1swXSlcclxuICBjb25zdCB7IHBvc3RzLCB0b3RhbFBhZ2VzIH0gPSBhd2FpdCBnZXRQb3N0c0J5UGFnZShwYWdlKTtcclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHByb3BzOiB7IHBvc3RzLCBwYWdlLCB0b3RhbFBhZ2VzIH1cclxuICB9O1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQb3N0c1BhZ2UoeyBwb3N0cywgcGFnZSwgdG90YWxQYWdlcyB9KSB7XHJcbiAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCk7XHJcblxyXG4gIGNvbnN0IGhhbmRsZVBhZ2VDaGFuZ2UgPSAobmV3UGFnZSkgPT4ge1xyXG4gICAgaWYgKG5ld1BhZ2UgPiAwICYmIG5ld1BhZ2UgPD0gdG90YWxQYWdlcykge1xyXG4gICAgICByb3V0ZXIucHVzaChgL3Rlc3Q/cGFnZT0ke25ld1BhZ2V9YCk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDxkaXY+XHJcbiAgICAgIDxoMT5Qb3N0cyAtIFBhZ2Uge3BhZ2V9PC9oMT5cclxuICAgICAgPHVsPlxyXG4gICAgICAgIHtwb3N0cy5tYXAocG9zdCA9PiAoXHJcbiAgICAgICAgICA8bGkga2V5PXtwb3N0LmlkfT57cG9zdC50aXRsZX08L2xpPlxyXG4gICAgICAgICkpfVxyXG4gICAgICA8L3VsPlxyXG4gICAgICA8ZGl2PlxyXG4gICAgICAgIDxidXR0b24gb25DbGljaz17KCkgPT4gaGFuZGxlUGFnZUNoYW5nZShwYWdlIC0gMSl9IGRpc2FibGVkPXtwYWdlID09PSAxfT5cclxuICAgICAgICAgIFByZXZpb3VzXHJcbiAgICAgICAgPC9idXR0b24+XHJcbiAgICAgICAgPHNwYW4+IFBhZ2Uge3BhZ2V9IG9mIHt0b3RhbFBhZ2VzfSA8L3NwYW4+XHJcbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBoYW5kbGVQYWdlQ2hhbmdlKHBhZ2UgKyAxKX0gZGlzYWJsZWQ9e3BhZ2UgPT09IHRvdGFsUGFnZXN9PlxyXG4gICAgICAgICAgTmV4dFxyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICA8L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gICk7XHJcbn0gXHJcblxyXG4qLyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/pages/test/index.jsx\n"));

/***/ })

});