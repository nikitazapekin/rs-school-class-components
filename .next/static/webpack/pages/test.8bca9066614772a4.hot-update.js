"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/test",{

/***/ "./src/pages/test/index.jsx":
/*!**********************************!*\
  !*** ./src/pages/test/index.jsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   __N_SSP: function() { return /* binding */ __N_SSP; },\n/* harmony export */   \"default\": function() { return /* binding */ PostsPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);\n// pages/test/index.jsx\n\nvar _s = $RefreshSig$();\n\nvar __N_SSP = true;\nfunction PostsPage(param) {\n    let { posts, page, totalPages } = param;\n    _s();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n    const handlePageChange = (newPage)=>{\n        if (newPage > 0 && newPage <= totalPages) {\n            router.push(\"/test?page=\".concat(newPage));\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                children: [\n                    \"Posts - Page \",\n                    page\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\wotbl\\\\search-rs\\\\src\\\\pages\\\\test\\\\index.jsx\",\n                lineNumber: 44,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                children: posts.map((post)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n                        children: post.title\n                    }, post.id, false, {\n                        fileName: \"C:\\\\Users\\\\wotbl\\\\search-rs\\\\src\\\\pages\\\\test\\\\index.jsx\",\n                        lineNumber: 47,\n                        columnNumber: 11\n                    }, this))\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\wotbl\\\\search-rs\\\\src\\\\pages\\\\test\\\\index.jsx\",\n                lineNumber: 45,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>handlePageChange(page - 1),\n                        disabled: page === 1,\n                        children: \"Previous\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\wotbl\\\\search-rs\\\\src\\\\pages\\\\test\\\\index.jsx\",\n                        lineNumber: 51,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"span\", {\n                        children: [\n                            \" Page \",\n                            page,\n                            \" of \",\n                            totalPages,\n                            \" \"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"C:\\\\Users\\\\wotbl\\\\search-rs\\\\src\\\\pages\\\\test\\\\index.jsx\",\n                        lineNumber: 54,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                        onClick: ()=>handlePageChange(page + 1),\n                        disabled: page === totalPages,\n                        children: \"Next\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\wotbl\\\\search-rs\\\\src\\\\pages\\\\test\\\\index.jsx\",\n                        lineNumber: 55,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\wotbl\\\\search-rs\\\\src\\\\pages\\\\test\\\\index.jsx\",\n                lineNumber: 50,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\wotbl\\\\search-rs\\\\src\\\\pages\\\\test\\\\index.jsx\",\n        lineNumber: 43,\n        columnNumber: 5\n    }, this);\n} /*import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { query } = context;\r\n  const page = query.page || 1;\r\n  const limit = 10;\r\n\r\n  const res = await axios.get(`https://api.github.com/users?per_page=${limit}&page=${page}`);\r\n  const users = res.data;\r\n\r\n  return {\r\n    props: {\r\n      users,\r\n      page: parseInt(page, 10),\r\n    },\r\n  };\r\n}\r\n\r\nexport default function Home({ users, page }) {\r\n  const [currentPage, setCurrentPage] = useState(page);\r\n\r\n  const handlePageChange = (newPage) => {\r\n    setCurrentPage(newPage);\r\n    window.location.href = `/?page=${newPage}`;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>GitHub Users</h1>\r\n      <div className=\"card-container\">\r\n        {users.map(user => (\r\n          <div key={user.id} className=\"card\">\r\n            <img src={user.avatar_url} alt={user.login} className=\"avatar\" />\r\n            <h2>{user.login}</h2>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"pagination\">\r\n        <button \r\n          onClick={() => handlePageChange(currentPage - 1)}\r\n          disabled={currentPage <= 1}\r\n        >\r\n          Prev\r\n        </button>\r\n        <button \r\n          onClick={() => handlePageChange(currentPage + 1)}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n\r\n      <style jsx>{`\r\n        .card-container {\r\n          display: flex;\r\n          flex-wrap: wrap;\r\n          gap: 16px;\r\n        }\r\n        .card {\r\n          border: 1px solid #ddd;\r\n          padding: 16px;\r\n          border-radius: 8px;\r\n          text-align: center;\r\n          width: 150px;\r\n        }\r\n        .avatar {\r\n          width: 100px;\r\n          height: 100px;\r\n          border-radius: 50%;\r\n        }\r\n        .pagination {\r\n          margin-top: 16px;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          width: 200px;\r\n        }\r\n        button {\r\n          padding: 8px 16px;\r\n          font-size: 16px;\r\n          cursor: pointer;\r\n        }\r\n        button:disabled {\r\n          cursor: not-allowed;\r\n          opacity: 0.5;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n}\r\n  */  /*import { useState, useEffect } from 'react';\r\n\r\nexport default function Home({ initialData }) {\r\n  const [limit, setLimit] = useState('30');\r\n  const [offset, setOffset] = useState('1');\r\n  const [data, setData] = useState(initialData);\r\n\r\n  const fetchData = async (limit, offset) => {\r\n    const response = await fetch(`/api/get-users?limit=${limit}&offset=${offset}`);\r\n    const result = await response.json();\r\n    setData(result);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(limit, offset);\r\n  }, [limit, offset]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>GitHub Users</h1>\r\n      <div>\r\n        <label>\r\n          Limit:\r\n          <input\r\n            type=\"number\"\r\n            value={limit}\r\n            onChange={(e) => setLimit(e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Offset:\r\n          <input\r\n            type=\"number\"\r\n            value={offset}\r\n            onChange={(e) => setOffset(e.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n      <ul>\r\n        {data.map((user) => (\r\n          <li key={user.id}>{user.login}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n// pages/api/get-users.js\r\n  async function handler(req, res) {\r\n  const { limit = 30, offset = 1 } = req.query;\r\n  const response = await fetch(`https://api.github.com/users?page=${offset}&per_page=${limit}`);\r\n  const data = await response.json();\r\n  \r\n  res.status(200).json(data);\r\n}\r\n\r\n// getServerSideProps remains the same\r\nexport async function getServerSideProps(context) {\r\n  const { limit = 30, offset = 1 } = context.query;\r\n  const response = await fetch(`https://api.github.com/users?page=${offset}&per_page=${limit}`);\r\n  const data = await response.json();\r\n\r\n  return {\r\n    props: {\r\n      initialData: data,\r\n    },\r\n  };\r\n}\r\n\r\n*/  /* import { useState } from 'react';\r\n\r\nexport default function Home({ initialData }) {\r\n  const [limit, setLimit] = useState('');\r\n  const [offset, setOffset] = useState('');\r\n  const [data, setData] = useState(initialData);\r\n\r\n   \r\n\r\n  return (\r\n    <div>\r\n      <h1>GitHub Users</h1>\r\n      <div>\r\n        <label>\r\n          Limit:\r\n          <input\r\n            type=\"number\"\r\n            value={limit}\r\n            onChange={(e) => setLimit(e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Offset:\r\n          <input\r\n            type=\"number\"\r\n            value={offset}\r\n            onChange={(e) => setOffset(e.target.value)}\r\n          />\r\n        </label>\r\n      \r\n      </div>\r\n      <ul>\r\n        {data.map((user) => (\r\n          <li key={user.id}>{user.login}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { limit = 30, offset = 1 } = context.query;\r\n  const response = await fetch(`https://api.github.com/users?page=${offset}&per_page=${limit}`);\r\n  const data = await response.json();\r\n\r\n  return {\r\n    props: {\r\n      initialData: data,\r\n    },\r\n  };\r\n}\r\n\r\n*/  /*import type { InferGetServerSidePropsType, GetServerSideProps } from 'next'\r\n \r\ntype Repo = {\r\n  name: string\r\n  stargazers_count: number\r\n}\r\n \r\nexport const getServerSideProps = (async () => {\r\n  // Fetch data from external API\r\n  const res = await fetch('https://api.github.com/repos/vercel/next.js')\r\n  const repo: Repo = await res.json()\r\n  // Pass data to the page via props\r\n  return { props: { repo } }\r\n}) satisfies GetServerSideProps<{ repo: Repo }>\r\n \r\nexport default function Page({\r\n  repo,\r\n}: InferGetServerSidePropsType<typeof getServerSideProps>) {\r\n  return (\r\n    <main style={{ position: 'relative', top: '300px' }}>\r\n      <p>{repo.stargazers_count}</p>\r\n    </main>\r\n  )\r\n}\r\n*/  /*import { useState } from 'react';\r\n\r\nexport default function Home({ initialData }) {\r\n  const [limit, setLimit] = useState('');\r\n  const [offset, setOffset] = useState('');\r\n  const [data, setData] = useState(initialData);\r\n\r\n  const handleFetch = async () => {\r\n    const response = await fetch(`/api/fetchData?limit=${limit}&offset=${offset}`);\r\n    const newData = await response.json();\r\n    setData(newData);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>GitHub Users</h1>\r\n      <div>\r\n        <label>\r\n          Limit:\r\n          <input\r\n            type=\"number\"\r\n            value={limit}\r\n            onChange={(e) => setLimit(e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Offset:\r\n          <input\r\n            type=\"number\"\r\n            value={offset}\r\n            onChange={(e) => setOffset(e.target.value)}\r\n          />\r\n        </label>\r\n        <button onClick={handleFetch}>Fetch Data</button>\r\n      </div>\r\n      <ul>\r\n        {data.map((user) => (\r\n          <li key={user.id}>{user.login}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\n  const { limit = 30, offset = 1 } = context.query;\r\n  const response = await fetch(`https://api.github.com/users?page=${offset}&per_page=${limit}`);\r\n  const data = await response.json();\r\n\r\n  return {\r\n    props: {\r\n      initialData: data,\r\n    },\r\n  };\r\n}\r\n\r\nexport default async function handler(req, res) {\r\n  const { limit, offset } = req.query;\r\n\r\n  const response = await fetch(`https://api.github.com/users?page=${offset}&per_page=${limit}`);\r\n  const data = await response.json();\r\n\r\n  res.status(200).json(data);\r\n}\r\n*/  /*\r\nimport React, { useState } from 'react';\r\n\r\nconst Posts = ({ initialPosts }) => {\r\n  const [posts, setPosts] = useState(initialPosts);\r\n\r\n  const fetchPosts = async () => {\r\n    try {\r\n      const res = await fetch('/api/posts');\r\n      if (!res.ok) {\r\n        throw new Error('Failed to fetch posts');\r\n      }\r\n      const newPosts = await res.json();\r\n      setPosts(newPosts);\r\n    } catch (error) {\r\n      console.error('Error fetching posts:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', top: '300px' }}>\r\n      <h1>Posts</h1>\r\n      <button onClick={fetchPosts}>Fetch Posts</button>\r\n      <ul>\r\n        {posts.map(post => (\r\n          <li key={post.id}>{post.title}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async () => {\r\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n  if (!res.ok) {\r\n    console.error('Failed to fetch initial posts');\r\n    return {\r\n      props: {\r\n        initialPosts: [],\r\n      },\r\n    };\r\n  }\r\n  const posts = await res.json();\r\n  console.log(posts[0]);\r\n  return {\r\n    props: {\r\n      initialPosts: posts,\r\n    },\r\n  };\r\n};\r\n\r\nexport default Posts;\r\n\r\n*/  /*import React, { useState } from 'react';\r\n\r\nconst Posts = ({ initialPosts }) => {\r\n  const [posts, setPosts] = useState(initialPosts);\r\n\r\n  const fetchPosts = async () => {\r\n    const res = await fetch('/api/posts');\r\n    const newPosts = await res.json();\r\n    setPosts(newPosts);\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: 'relative', top: '300px' }}>\r\n      <h1>Posts</h1>\r\n      <button onClick={fetchPosts}>Fetch Posts</button>\r\n      <ul>\r\n        {posts.map(post => (\r\n          <li key={post.id}>{post.title}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async () => {\r\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n  const posts = await res.json();\r\n  console.log(posts[0]);\r\n  return {\r\n    props: {\r\n      initialPosts: posts,\r\n    },\r\n  };\r\n};\r\n\r\nexport default Posts;\r\n*/  /*\r\nimport React from 'react';\r\n\r\nconst Posts = ({ posts }) => {\r\n  return (\r\n    <div  style={{position: \"relative\", top: \"300px\"}}>\r\n      <h1>Posts</h1>\r\n      <ul>\r\n        {posts.map(post => (\r\n          <li key={post.id}>{post.title}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport const getServerSideProps = async () => {\r\n\r\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n  const posts = await res.json();\r\nconsole.log(posts)\r\n  return {\r\n    props: {\r\n      posts,\r\n    },\r\n  };\r\n};\r\n\r\n\r\nexport default Posts;\r\n*/  /*\r\nimport React from 'react';\r\n\r\nconst Posts = ({ posts }) => {\r\n  return (\r\n    <div  style={{position: \"relative\", top: \"300px\"}}>\r\n      <h1>Posts</h1>\r\n      <ul>\r\n        {posts.map(post => (\r\n          <li key={post.id}>{post.title}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getServerSideProps = async () => {\r\n  // Замените URL на адрес вашего API\r\n  const res = await fetch('https://jsonplaceholder.typicode.com/posts');\r\n  const posts = await res.json();\r\n\r\n  return {\r\n    props: {\r\n      posts,\r\n    },\r\n  };\r\n};\r\n\r\nexport default Posts;\r\n*/  /*import React from 'react';\r\n\r\nfunction Page({ data }) {\r\n  return (\r\n    <>\r\n\t<div style={{position: \"relative\", top: \"300px\"}}>\r\n\r\n      <h1>{data.title}</h1>\r\n      <p>{data.body}</p>\r\n\t</div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps() {\r\n  try {\r\n    const res = await fetch('http://example.com/data');\r\n\r\n    // Check if the content type is JSON\r\n    const contentType = res.headers.get('content-type');\r\n    if (!contentType || !contentType.includes('application/json')) {\r\n      throw new Error('Invalid content-type. Expected application/json');\r\n    }\r\n\r\n    const data = await res.json();\r\n\r\n    // Additional check to ensure 'data' is an object\r\n    if (typeof data !== 'object' || data === null) {\r\n      throw new Error('Invalid JSON response');\r\n    }\r\n\r\n    return {\r\n      props: { data },\r\n    };\r\n  } catch (error) {\r\n    console.error('Failed to fetch data:', error);\r\n    return {\r\n      props: {\r\n        data: { title: 'Error', body: 'Failed to load data' },\r\n      },\r\n    };\r\n  }\r\n}\r\n\r\nexport default Page;\r\n*/  /*import { GetServerSideProps } from 'next';\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\n\r\ntype UserDataArray = Array<{\r\n\tlogin: string;\r\n\tid: number;\r\n\tnode_id: string;\r\n\tavatar_url: string;\r\n\tgravatar_id: string;\r\n\turl: string;\r\n\thtml_url: string;\r\n\tfollowers_url: string;\r\n\tfollowing_url: string;\r\n\tgists_url: string;\r\n\tstarred_url: string;\r\n\tsubscriptions_url: string;\r\n\torganizations_url: string;\r\n\trepos_url: string;\r\n\tevents_url: string;\r\n\treceived_events_url: string;\r\n\ttype: string;\r\n\tsite_admin: boolean;\r\n\tscore: number;\r\n}>;\r\n\r\ninterface UserData {\r\n\ttotal_count: number;\r\n\tincomplete_results: boolean;\r\n\titems: UserDataArray;\r\n}\r\n\r\nasync function fetchUserData(url: string): Promise<UserDataArray> {\r\n\ttry {\r\n\t\tconst response: AxiosResponse<UserDataArray> = await axios.get(url);\r\n\t\treturn response.data;\r\n\t} catch (error) {\r\n\t\tif (axios.isAxiosError(error)) {\r\n\t\t\tconst axiosError = error as AxiosError;\r\n\t\t\tconsole.error('Error fetching data:', axiosError.message);\r\n\t\t} else {\r\n\t\t\tconsole.error('Unknown error:', error);\r\n\t\t}\r\n\t\tthrow new Error('Error fetching data');\r\n\t}\r\n}\r\n\r\nasync function fetchUserDataAdvanced(url: string): Promise<UserData> {\r\n\ttry {\r\n\t\tconst response: AxiosResponse<UserData> = await axios.get(url);\r\n\t\treturn response.data;\r\n\t} catch (error) {\r\n\t\tif (axios.isAxiosError(error)) {\r\n\t\t\tconst axiosError = error as AxiosError;\r\n\t\t\tconsole.error('Error fetching data:', axiosError.message);\r\n\t\t} else {\r\n\t\t\tconsole.error('Unknown error:', error);\r\n\t\t}\r\n\t\tthrow new Error('Error fetching data');\r\n\t}\r\n}\r\n\r\ninterface Props {\r\n\tusers: UserDataArray;\r\n}\r\n\r\nconst UserPage: React.FC<Props> = ({ users }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Users</h1>\r\n\t\t\t<ul>\r\n\t\t\t\t{users.map(user => (\r\n\t\t\t\t\t<li key={user.id}>\r\n\t\t\t\t\t\t<a href={user.html_url}>\r\n\t\t\t\t\t\t\t<img src={user.avatar_url} alt={user.login} width={50} />\r\n\t\t\t\t\t\t\t<p>{user.login}</p>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport const getServerSideProps: GetServerSideProps = async (context) => {\r\n\tconst { limit = '10', offset = '1', typedValue = '' } = context.query;\r\n\r\n\tlet typedValueString: string;\r\n\tif (Array.isArray(typedValue)) {\r\n\t\ttypedValueString = typedValue[0]; // Assuming you only need the first value if it's an array\r\n\t} else {\r\n\t\ttypedValueString = typedValue;\r\n\t}\r\n\r\n\tlet url: string;\r\n\tif (typedValueString.trim() === '') {\r\n\t\turl = `https://api.github.com/users?page=${offset}&per_page=${limit}`;\r\n\t\ttry {\r\n\t\t\tconst data = await fetchUserData(url);\r\n\t\t\treturn {\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tusers: data,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treturn {\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tusers: [],\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t} else {\r\n\t\turl = `https://api.github.com/search/users?q=${typedValueString}&page=${offset}&per_page=${limit}`;\r\n\t\ttry {\r\n\t\t\tconst data = await fetchUserDataAdvanced(url);\r\n\t\t\treturn {\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tusers: data.items,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treturn {\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tusers: [],\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n};\r\n\r\nexport default UserPage;\r\n\r\n*/  /* import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { GetServerSideProps } from 'next';\r\n\r\n// Define the UserDataArray and UserData types\r\ntype UserDataArray = Array<{\r\n\tlogin: string;\r\n\tid: number;\r\n\tnode_id: string;\r\n\tavatar_url: string;\r\n\tgravatar_id: string;\r\n\turl: string;\r\n\thtml_url: string;\r\n\tfollowers_url: string;\r\n\tfollowing_url: string;\r\n\tgists_url: string;\r\n\tstarred_url: string;\r\n\tsubscriptions_url: string;\r\n\torganizations_url: string;\r\n\trepos_url: string;\r\n\tevents_url: string;\r\n\treceived_events_url: string;\r\n\ttype: string;\r\n\tsite_admin: boolean;\r\n\tscore: number;\r\n}>;\r\n\r\ninterface UserData {\r\n\ttotal_count: number;\r\n\tincomplete_results: boolean;\r\n\titems: UserDataArray;\r\n}\r\n\r\n// Fetch user data function\r\nasync function fetchUserData(url: string): Promise<UserDataArray> {\r\n\ttry {\r\n\t\tconst response: AxiosResponse<UserDataArray> = await axios.get(url);\r\n\t\treturn response.data;\r\n\t} catch (error) {\r\n\t\tif (axios.isAxiosError(error)) {\r\n\t\t\tconst axiosError = error as AxiosError;\r\n\t\t\tconsole.error('Error fetching data:', axiosError.message);\r\n\t\t} else {\r\n\t\t\tconsole.error('Unknown error:', error);\r\n\t\t}\r\n\t\tthrow new Error('Error fetching data');\r\n\t}\r\n}\r\n\r\n// Fetch advanced user data function\r\nasync function fetchUserDataAdvanced(url: string): Promise<UserData> {\r\n\ttry {\r\n\t\tconst response: AxiosResponse<UserData> = await axios.get(url);\r\n\t\treturn response.data;\r\n\t} catch (error) {\r\n\t\tif (axios.isAxiosError(error)) {\r\n\t\t\tconst axiosError = error as AxiosError;\r\n\t\t\tconsole.error('Error fetching data:', axiosError.message);\r\n\t\t} else {\r\n\t\t\tconsole.error('Unknown error:', error);\r\n\t\t}\r\n\t\tthrow new Error('Error fetching data');\r\n\t}\r\n}\r\n\r\n// Page component\r\ninterface Props {\r\n\tusers: UserDataArray;\r\n}\r\n\r\n// The page component itself\r\nconst UserPage: React.FC<Props> = ({ users }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h1>Users</h1>\r\n\t\t\t<ul>\r\n\t\t\t\t{users.map(user => (\r\n\t\t\t\t\t<li key={user.id}>\r\n\t\t\t\t\t\t<a href={user.html_url}>\r\n\t\t\t\t\t\t\t<img src={user.avatar_url} alt={user.login} width={50} />\r\n\t\t\t\t\t\t\t<p>{user.login}</p>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t))}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n// Server-side function to fetch data\r\nexport const getServerSideProps: GetServerSideProps = async (context) => {\r\n\tconst { limit = '10', offset = '1', typedValue = '' } = context.query;\r\n\r\n\tlet url: string;\r\n   // if(typedValue) {\r\n\tif ( typedValue.trim() === '') {\r\n\t\turl = `https://api.github.com/users?page=${offset}&per_page=${limit}`;\r\n\t\ttry {\r\n\t\t\tconst data = await fetchUserData(url);\r\n\t\t\treturn {\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tusers: data,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treturn {\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tusers: [],\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t} else {\r\n\t\turl = `https://api.github.com/search/users?q=${typedValue}&page=${offset}&per_page=${limit}`;\r\n\t\ttry {\r\n\t\t\tconst data = await fetchUserDataAdvanced(url);\r\n\t\t\treturn {\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tusers: data.items,\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\treturn {\r\n\t\t\t\tprops: {\r\n\t\t\t\t\tusers: [],\r\n\t\t\t\t},\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\r\n//}\r\n};\r\n\r\nexport default UserPage;\r\n*/ \n_s(PostsPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter\n    ];\n});\n_c = PostsPage;\nvar _c;\n$RefreshReg$(_c, \"PostsPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/pages/test/index.jsx\n"));

/***/ })

});