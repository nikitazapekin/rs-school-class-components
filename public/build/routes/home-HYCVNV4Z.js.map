{
  "version": 3,
  "sources": ["../../../app/routes/home/index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\home\\\\\\\\index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\home\\\\index.tsx\");\n  import.meta.hot.lastModified = \"1723306689004.5981\";\n}\n// REMIX HMR END\n\nimport { useLoaderData } from '@remix-run/react';\nimport { useState } from 'react';\nexport async function loader() {\n  return {\n    message: 'hello from loader'\n  };\n}\nexport const meta = () => {\n  return [{\n    title: 'New Remix App'\n  }, {\n    name: 'description',\n    content: 'Welcome to Remix!'\n  }];\n};\nexport default function Index() {\n  _s();\n  const loaderData = useLoaderData();\n  const [notes, setNotes] = useState([{\n    id: 1,\n    text: 'This is a note'\n  }]);\n  return <main className=\"container\">\r\n      <h1>Welcome to Remix</h1>\r\n      <p>{loaderData.message}</p>\r\n      <button onClick={() => setNotes([...notes, {\n      id: notes.length + 1,\n      text: `Note ${notes.length + 1}`\n    }])}>\r\n        Create a Note\r\n      </button>\r\n      <ul>\r\n        {notes.map(note => {\n        return <li key={note.id}>{note.text}</li>;\n      })}\r\n      </ul>\r\n    </main>;\n}\n\n//npm install --save-dev vitest --legacy-peer-deps\n_s(Index, \"gxZ/hPekVAVwaRkJ/ekyr1c3Vx8=\", false, function () {\n  return [useLoaderData];\n});\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAsBA,IAAAA,gBAAyB;AAsBnB;AA3CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA8B;AAC9B,cAAY,IAAI,eAAe;AACjC;AAUO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,GAAG;AAAA,IACD,MAAM;AAAA,IACN,SAAS;AAAA,EACX,CAAC;AACH;AACe,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM,aAAa,cAAc;AACjC,QAAM,CAAC,OAAO,QAAQ,QAAI,wBAAS,CAAC;AAAA,IAClC,IAAI;AAAA,IACJ,MAAM;AAAA,EACR,CAAC,CAAC;AACF,SAAO,mDAAC,UAAK,WAAU,aACnB;AAAA,uDAAC,QAAG,gCAAJ;AAAA;AAAA;AAAA;AAAA,WAAoB;AAAA,IACpB,mDAAC,OAAG,qBAAW,WAAf;AAAA;AAAA;AAAA;AAAA,WAAuB;AAAA,IACvB,mDAAC,YAAO,SAAS,MAAM,SAAS,CAAC,GAAG,OAAO;AAAA,MAC3C,IAAI,MAAM,SAAS;AAAA,MACnB,MAAM,QAAQ,MAAM,SAAS;AAAA,IAC/B,CAAC,CAAC,GAAG,6BAHH;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,mDAAC,QACE,gBAAM,IAAI,UAAQ;AACnB,aAAO,mDAAC,QAAkB,eAAK,QAAf,KAAK,IAAd;AAAA;AAAA;AAAA;AAAA,aAA6B;AAAA,IACtC,CAAC,KAHD;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OAbG;AAAA;AAAA;AAAA;AAAA,SAcL;AACJ;AAGA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react"]
}
