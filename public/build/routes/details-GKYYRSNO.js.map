{
  "version": 3,
  "sources": ["../../../app/routes/details/index.tsx", "../../../src/components/UserData/index.tsx", "../../../src/store/selectors/isLoadingUserData.ts", "../../../src/store/selectors/getClickedElement.ts"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\details\\\\\\\\index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\details\\\\index.tsx\");\n  import.meta.hot.lastModified = \"1723301011917.2275\";\n}\n// REMIX HMR END\n\nimport React, { useEffect } from \"react\";\nimport axios from 'axios';\nimport { useLoaderData } from \"@remix-run/react\";\nimport UserData from \"../../../src/components/UserData/index\";\nimport App from \"../../../src/components/App\";\nimport Background from \"../../../src/components/Background\";\nimport { useAppDispatch } from \"../../../src/hooks/redux\";\nimport { setClickedUser } from \"../../../src/store/slices/appSlice\";\nimport Spinner from \"@/components/Spinner\";\nimport { useNavigation } from '@remix-run/react';\nexport async function loader({\n  request\n}) {\n  const url = new URL(request.url);\n  const search = new URLSearchParams(url.search);\n  const query = search.get(\"query\") || \"type:user\";\n  const page = parseInt(search.get(\"page\") || \"1\", 10);\n  const limit = parseInt(search.get(\"limit\") || \"10\", 10);\n  const username = search.get(\"user\");\n  try {\n    const apiUrl = `https://api.github.com/users/${username}`;\n    const response = await axios.get(apiUrl);\n    const user = response.data;\n    console.log(user);\n    return {\n      user,\n      query,\n      page,\n      limit\n    };\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      console.error('Error fetching data:', error.message);\n    } else {\n      console.error('Unknown error:', error);\n    }\n    return {\n      user: [],\n      query: \"\",\n      page: 1,\n      limit: 10\n    };\n  }\n}\nconst Deatils = () => {\n  _s();\n  const {\n    user\n  } = useLoaderData();\n  const dispath = useAppDispatch();\n  useEffect(() => {\n    dispath(setClickedUser(user));\n  }, [user]);\n  const {\n    state\n  } = useNavigation();\n  console.log(state);\n  return <>\r\n\r\n    {state === 'loading' && <div style={{\n      width: \"100%\",\n      height: \"100vh\",\n      position: \"relative\",\n      zIndex: \"111111\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }}>\r\n    <Spinner />\r\n \r\n    </div>}\r\n            <App />\r\n            <Background />\r\n          <UserData />\r\n        \r\n        </>;\n};\n_s(Deatils, \"u7wKP1F6xXqlF1DiBa55jL9cNFk=\", false, function () {\n  return [useLoaderData, useAppDispatch, useNavigation];\n});\n_c = Deatils;\nexport default Deatils;\nvar _c;\n$RefreshReg$(_c, \"Deatils\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "\r\nimport React, { useState } from 'react';\r\nimport Spinner from '../Spinner';\r\nimport { useSelector } from 'react-redux';\r\nimport { isLoadingUserDataSelector } from '@/store/selectors/isLoadingUserData';\r\nimport { getThemeSelector } from '@/store/selectors/getTheme';\r\nimport { clickedUserSelector } from '@/store/selectors/getClickedElement';\r\nimport { paramsSelector } from '@/store/selectors/getSearchParams';\r\nimport { Link } from '@remix-run/react';\r\n\r\nconst UserData: React.FC = () => {\r\n  const isDark = useSelector(getThemeSelector);\r\n  const params = useSelector(paramsSelector);\r\n  const clickedUser = useSelector(clickedUserSelector);\r\n  const loading = useSelector(isLoadingUserDataSelector);\r\n  const [isHovering, setIsHovering] = useState(false);\r\n\r\n  const handleMouseEnter = () => setIsHovering(true);\r\n  const handleMouseLeave = () => setIsHovering(false);\r\n\r\n  return (\r\n    <aside\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        position: 'fixed',\r\n        right: 0,\r\n        top: 0,\r\n        width: '40%',\r\n        backgroundColor: isDark ? 'rgb(80, 75, 75)' : 'rgb(172, 164, 154)',\r\n        height: '100vh',\r\n        transition: '1s',\r\n      }}\r\n    >\r\n      {loading && <Spinner data-testid=\"spinner\" />}\r\n      <div>\r\n        <h2>{clickedUser.login}</h2>\r\n        <img\r\n          src={clickedUser.avatar_url}\r\n          alt={`${clickedUser.login}'s avatar`}\r\n          style={{\r\n            borderRadius: '50%',\r\n            maxWidth: '100px', // Adjusted size for a more appropriate display\r\n          }}\r\n        />\r\n        <p>ID: {clickedUser.id}</p>\r\n        <p>Type: {clickedUser.type}</p>\r\n      </div>\r\n      <Link\r\n        to={`/?page=${params.offset}${params.query ? `&query=${params.query}` : ''}`}\r\n        style={{\r\n          marginTop: '30px',\r\n          padding: '20px',\r\n          maxWidth: '90%',\r\n          width: '100%',\r\n          cursor: 'pointer',\r\n          borderRadius: '20px',\r\n          fontSize: '30px',\r\n          textAlign: 'center',\r\n          textDecoration: 'none',\r\n          color: isHovering ? '#fff' : '#000',\r\n          backgroundColor: isHovering ? 'rgb(90, 90, 190)' : 'transparent',\r\n          transition: '1s',\r\n        }}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        Close\r\n      </Link>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default UserData;\r\n\r\n/* \r\n \r\n//import './styles.scss';\r\nimport Spinner from '../Spinner';\r\n \r\n\r\nimport { useSelector } from 'react-redux';\r\n \r\nimport { isLoadingUserDataSelector } from '@/store/selectors/isLoadingUserData';\r\nimport { getThemeSelector } from '@/store/selectors/getTheme';\r\nimport { clickedUserSelector } from '@/store/selectors/getClickedElement';\r\nimport { paramsSelector } from '@/store/selectors/getSearchParams';\r\nimport { Link } from '@remix-run/react';\r\nconst UserData = () => {\r\n\t \r\n\tconst isDark = useSelector(getThemeSelector)\r\n const params = useSelector(paramsSelector)\r\n const clickedUser = useSelector(clickedUserSelector)\r\n\tconst loading = useSelector(isLoadingUserDataSelector);\r\n \r\n\treturn (\r\n\t\t<aside className={`sidebar ${isDark ? `sidebar-dark` : ''}`}>\r\n\t\t\t{loading && <Spinner data-testid=\"spinner\" />}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{clickedUser.login}</h2>\r\n\t\t\t\t\t<img src={clickedUser.avatar_url} alt={`${clickedUser.login}'s avatar`} />\r\n\t\t\t\t\t<p>ID: {clickedUser.id}</p>\r\n\t\t\t\t\t<p>Type: {clickedUser.type}</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t \r\n\r\n\t\t\t<Link to={`/?page=${params.offset}${params.query ? `&query=${params.query}` : ``}`}>\r\n\t\t\tClose\r\n\t\t\t</Link>\r\n\t\t</aside>\r\n\t);\r\n};\r\n\r\nexport default UserData;\r\n*/", "import { RootState } from '../store';\r\nexport const isLoadingUserDataSelector = (state: RootState) => state.appSlice.isLoadingUserData;\r\n", "import { RootState } from '../store';\r\nexport const clickedUserSelector = (state: RootState) => state.appSlice.clickedUser;"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime"]
}
