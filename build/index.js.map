{
  "version": 3,
  "sources": ["../app/entry.server.tsx", "../app/root.tsx", "../src/store/store.ts", "../src/store/slices/appSlice.ts", "../src/store/slices/selectedElementsSlice.ts", "../src/store/slices/themeSlice.ts", "../app/routes/errorpage.test.tsx", "../app/routes/details/index.tsx", "../src/components/UserData/index.tsx", "../src/components/Spinner/index.tsx", "../src/store/selectors/isLoadingUserData.ts", "../src/store/selectors/getTheme.ts", "../src/store/selectors/getClickedElement.ts", "../src/store/selectors/getSearchParams.ts", "../src/components/Header/index.tsx", "../src/components/ThemeButton/index.tsx", "../src/hooks/redux.ts", "../src/hooks/useURL.ts", "../src/store/action-creators/setSearchParamsActionCreator.ts", "../src/store/action-creators/addElementToStorage.ts", "../src/components/Card/index.tsx", "../src/store/selectors/getStoredElements.ts", "../src/components/List/index.tsx", "../src/store/selectors/getUsersSelector.ts", "../src/store/selectors/isLoadingSelector.ts", "../src/components/App/index.tsx", "../src/components/StoredUsersFlyoutElement/index.tsx", "../src/store/action-creators/clearStoredElementsActionCreator.ts", "../src/components/Background/index.tsx", "../src/store/action-creators/setStoredInLocalStorageQuery.ts", "../app/routes/_index.tsx", "../src/store/action-creators/setUsersActionCreator.ts", "../app/routes/$.tsx", "../src/components/NotFound/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["/**\r\n * By default, Remix will handle generating the HTTP Response for you.\r\n * You are free to delete this file if you'd like to, but if you ever want it revealed again, you can run `npx remix reveal` \u2728\r\n * For more information, see https://remix.run/file-conventions/entry.server\r\n */\r\n\r\nimport { PassThrough } from \"node:stream\";\r\n\r\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\r\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport { isbot } from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nconst ABORT_DELAY = 5_000;\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext,\r\n  // This is ignored so we can keep it in the template for visibility.  Feel\r\n  // free to delete this parameter in your app if you're not using it!\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  loadContext: AppLoadContext\r\n) {\r\n  return isbot(request.headers.get(\"user-agent\") || \"\")\r\n    ? handleBotRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      )\r\n    : handleBrowserRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      );\r\n}\r\n\r\nfunction handleBotRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onAllReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n\r\nfunction handleBrowserRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onShellReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n\r\n /*\r\nimport { PassThrough } from \"node:stream\";\r\nimport React from \"react\";\r\nimport type { AppLoadContext, EntryContext } from \"@remix-run/node\";\r\nimport { createReadableStreamFromReadable } from \"@remix-run/node\";\r\nimport { RemixServer } from \"@remix-run/react\";\r\nimport { isbot } from \"isbot\";\r\nimport { renderToPipeableStream } from \"react-dom/server\";\r\n\r\nconst ABORT_DELAY = 5_000;\r\n\r\nexport default function handleRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext,\r\n  // This is ignored so we can keep it in the template for visibility.  Feel\r\n  // free to delete this parameter in your app if you're not using it!\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  loadContext: AppLoadContext\r\n) {\r\n  return isbot(request.headers.get(\"user-agent\") || \"\")\r\n    ? handleBotRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      )\r\n    : handleBrowserRequest(\r\n        request,\r\n        responseStatusCode,\r\n        responseHeaders,\r\n        remixContext\r\n      );\r\n}\r\n\r\nfunction handleBotRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onAllReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n\r\nfunction handleBrowserRequest(\r\n  request: Request,\r\n  responseStatusCode: number,\r\n  responseHeaders: Headers,\r\n  remixContext: EntryContext\r\n) {\r\n  return new Promise((resolve, reject) => {\r\n    let shellRendered = false;\r\n    const { pipe, abort } = renderToPipeableStream(\r\n      <RemixServer\r\n        context={remixContext}\r\n        url={request.url}\r\n        abortDelay={ABORT_DELAY}\r\n      />,\r\n      {\r\n        onShellReady() {\r\n          shellRendered = true;\r\n          const body = new PassThrough();\r\n          const stream = createReadableStreamFromReadable(body);\r\n\r\n          responseHeaders.set(\"Content-Type\", \"text/html\");\r\n\r\n          resolve(\r\n            new Response(stream, {\r\n              headers: responseHeaders,\r\n              status: responseStatusCode,\r\n            })\r\n          );\r\n\r\n          pipe(body);\r\n        },\r\n        onShellError(error: unknown) {\r\n          reject(error);\r\n        },\r\n        onError(error: unknown) {\r\n          responseStatusCode = 500;\r\n          // Log streaming rendering errors from inside the shell.  Don't log\r\n          // errors encountered during initial shell rendering since they'll\r\n          // reject and get logged in handleDocumentRequest.\r\n          if (shellRendered) {\r\n            console.error(error);\r\n          }\r\n        },\r\n      }\r\n    );\r\n\r\n    setTimeout(abort, ABORT_DELAY);\r\n  });\r\n}\r\n*/", "import {\r\n  Links,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n} from \"@remix-run/react\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n \r\nimport { store } from \"../src/store/store\";\r\nexport function Layout({ children }: { children: React.ReactNode }) {\r\n \r\n  return (\r\n\r\n    <html lang=\"en\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Provider store={store}>\r\n        \r\n          {children}\r\n        </Provider>\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return <Outlet />;\r\n}\r\n\r\n\r\n/*\r\nimport {\r\n  Links,\r\n  Meta,\r\n  Outlet,\r\n  Scripts,\r\n  ScrollRestoration,\r\n} from \"@remix-run/react\";\r\n import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\n//import { store } from \"../src/store/store\";\r\nimport {store} from \"../src/teststore/store\"\r\nexport function Layout({ children }: { children: React.ReactNode }) {\r\n  return (\r\n    <html lang=\"en\">\r\n      <head>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        \r\n        <Provider store={store}>\r\n\r\n        {children}\r\n        </Provider>\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return <Outlet />;\r\n}\r\n*/", " \r\n \r\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\r\nimport type { ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport appSlice from './slices/appSlice';\r\n \r\nimport selectedElementsSlice from './slices/selectedElementsSlice';\r\nimport themeSlice from './slices/themeSlice';\r\n\r\nexport const rootReducer = combineReducers({\r\n\tappSlice: appSlice,\r\n\tselectedElementsSlice: selectedElementsSlice,\r\n\tthemeSlice: themeSlice\r\n\t \r\n});\r\n\r\nexport const store = configureStore({\r\n\treducer: rootReducer,\r\n\t \r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>;\r\n ", "import { createSlice, PayloadAction  } from '@reduxjs/toolkit';\r\nimport { AppStatee, SearchTypes,  UserDataArray } from '../types';\r\n import {User} from \"../types\"\r\nexport interface UserData {\r\n\ttotal_count: number;\r\n\tincomplete_results: boolean;\r\n\titems: UserDataArray;\r\n}\r\nexport const initialState: AppStatee = {\r\n\tisLoading: false,\r\n\terror: null,\r\n\tisLoadingUserData: false,\r\n\tusers: [],\r\n\ttypedValue: \"\",\r\n\tparams: {\r\n\t\tlimit: 10,\r\n\t\toffset: 1,\r\n\t\tquery: '',\r\n\t\tstoredValue: '',\r\n\t},\r\n\tstatus: 'idle',\r\n\tclickedUser: {\r\n\t\tlogin: \"\",\r\n\tid: 0,\r\n\tnode_id:\"\" ,\r\n\tavatar_url: \"\",\r\n\tgravatar_id:\"\" ,\r\n\turl:\"\" ,\r\n\thtml_url:\"\" ,\r\n\tfollowers_url: \"\",\r\n\tfollowing_url:\"\" ,\r\n\tgists_url: \"\",\r\n\tstarred_url: \"\",\r\n\tsubscriptions_url:  \"\",\r\n\torganizations_url: \"\",\r\n\trepos_url:\"\" ,\r\n\tevents_url:\"\" ,\r\n\treceived_events_url:\"\" ,\r\n\ttype: \"\",\r\n\tsite_admin: false,\r\n\tscore: 0\r\n\t}\r\n   \r\n};\r\nconst appSlicee = createSlice({\r\n\tname: 'app',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetLoading(state, action: PayloadAction<boolean>) {\r\n\t\t\tstate.isLoading = action.payload;\r\n\t\t},\r\n\t\tsetLoadingUserData(state, action: PayloadAction<boolean>) {\r\n\t\t\tstate.isLoadingUserData = action.payload;\r\n\t\t},\r\n\t\tsetError(state, action: PayloadAction<string | null>) {\r\n\t\t\tstate.error = action.payload;\r\n\t\t},\r\n\r\n\t\tsetSearchParamsURL(state, action: PayloadAction<SearchTypes>) {\r\n\t\t\tstate.params.query = action.payload.query;\r\n\t\t\tstate.params.offset = action.payload.offset;\r\n\t\t},\r\n\t\tsetFirstPage(state) {\r\n\t\t\tstate.params.offset = 1;\r\n\t\t},\r\n\t\tsetNextPage(state) {\r\n\t\t\tstate.params.offset = state.params.offset + 1;\r\n\t\t},\r\n\t\tsetPrevPage(state) {\r\n\t\t\tstate.params.offset = state.params.offset - 1;\r\n\t\t},\r\n\t\tsetQueryPage(state, action: PayloadAction<string>) {\r\n\t\t\tstate.params.query = action.payload;\r\n\t\t},\r\n\t\tsetUsers(state, action: PayloadAction<UserDataArray>) {\r\n\t\t\tstate.users = action.payload;\r\n\t\t},\r\n\t\tsetStoredInLocalStorageQuery(state, action: PayloadAction<string>) {\r\n\t\t\tstate.params.storedValue = action.payload;\r\n\t\t\tstate.params.query = action.payload;\r\n\t\t},\r\n\t\tsetTypedValue(state, action: PayloadAction<string>) {\r\n\t\tstate.typedValue = action.payload\r\n\t\t},\r\n\t\tsetNewSearchValue(state) {\r\n\t\tstate.params.query=state.typedValue\r\n\t\tstate.params.storedValue=state.typedValue\r\n\t\t\t},\r\n\t\t\tsetClickedUser(state, action: PayloadAction<User>) {\r\n\t\t\t \r\n\t\t\tstate.clickedUser = action.payload\r\n\t\t\t \r\n\t\t\t\t\t},\r\n\t},\r\n\r\n \r\n\r\n});\r\nexport const {\r\n\tsetLoading,\r\n\tsetError,\r\n\tsetLoadingUserData,\r\n\tsetSearchParamsURL,\r\n\tsetNextPage,\r\n\tsetPrevPage,\r\n\tsetQueryPage,\r\n\tsetUsers,\r\n\tsetFirstPage,\r\n\tsetStoredInLocalStorageQuery,\r\n\tsetTypedValue,\r\n\tsetClickedUser,\r\n\tsetNewSearchValue,\r\n\t \r\n} = appSlicee.actions;\r\nexport default appSlicee.reducer;", "import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { SelectedElementsState, UserItem } from '../types';\r\nconst initialState: SelectedElementsState = {\r\n\tstoredElements: [],\r\n\r\n\tselectedElement: null,\r\n};\r\nconst selectedElementsSlice = createSlice({\r\n\tname: 'selectedElements',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetAddToStoredElement(state, action: PayloadAction<UserItem>) {\r\n\t\t\tif (!state.storedElements.some((item) => item.id == action.payload.id)) {\r\n\t\t\t\tstate.storedElements = [...state.storedElements, action.payload];\r\n\t\t\t} else {\r\n\t\t\t\tstate.storedElements = state.storedElements.filter((item) => item.id != action.payload.id);\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetRemoveStoredElementById(state, action: PayloadAction<number>) {\r\n\t\t\tstate.storedElements = state.storedElements.filter((item) => item.id != action.payload);\r\n\t\t},\r\n\t\tsetClearStoredElements(state) {\r\n\t\t\tstate.storedElements = [];\r\n\t\t},\r\n\t\tsetSelectedElement(state, action: PayloadAction<UserItem | undefined | null>) {\r\n\t\t\tif (action.payload != null && action.payload != undefined) {\r\n\t\t\t\tstate.selectedElement = action.payload;\r\n\t\t\t}\r\n\t\t\tconsole.log(state.selectedElement);\r\n\t\t},\r\n\t},\r\n});\r\nexport const { setAddToStoredElement, setClearStoredElements, setSelectedElement, setRemoveStoredElementById } =\r\n\tselectedElementsSlice.actions;\r\nexport default selectedElementsSlice.reducer;\r\n", "import { createSlice  } from '@reduxjs/toolkit';\r\nimport {  UserDataArray } from '../types';\r\n \r\nexport interface UserData {\r\n\ttotal_count: number;\r\n\tincomplete_results: boolean;\r\n\titems: UserDataArray;\r\n}\r\n \r\ninterface ThemeSlice {\r\n    isDark: boolean\r\n}\r\n  \r\n\r\n  \r\nconst initialState: ThemeSlice = {\r\n isDark: false\r\n   \r\n};\r\nconst themeSlice = createSlice({\r\n\tname: 'app',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetTheme(state) {\r\n\t\t\tstate.isDark = !state.isDark\r\n\t\t},\r\n\t \r\n\t},\r\n\r\n \r\n\r\n});\r\nexport const {\r\nsetTheme\r\n} = themeSlice.actions;\r\nexport default themeSlice.reducer;", "\r\nimport { render, screen } from '@testing-library/react';\r\n\r\nimport NotPage from './$';  \r\n\r\n//describe('NotPage', () => {\r\n/*\r\n  test('renders NotFound component', () => {\r\n \r\n    render(<NotPage />);\r\n\r\n \r\n    const notFoundElement = screen.getByTestId('not-found');\r\n\r\n    \r\n    expect(notFoundElement).toBeInTheDocument();\r\n    });\r\n  */\r\n//});\r\n", "import React, { useEffect } from \"react\";\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { useLoaderData } from \"@remix-run/react\";\r\nimport { redirect } from \"@remix-run/node\";\r\nimport UserData from \"../../../src/components/UserData/index\"\r\nimport App from \"../../../src/components/App\";\r\nimport Background from \"../../../src/components/Background\";\r\nimport { useAppDispatch } from \"../../../src/hooks/redux\";\r\nimport { setClickedUser } from \"../../../src/store/slices/appSlice\";\r\nimport Spinner from \"@/components/Spinner\";\r\nimport { useNavigation } from '@remix-run/react';\r\ninterface User {\r\n    login: string;\r\n    id: number;\r\n    node_id: string;\r\n    avatar_url: string;\r\n    gravatar_id: string;\r\n    url: string;\r\n    html_url: string;\r\n    followers_url: string;\r\n    following_url: string;\r\n    gists_url: string;\r\n    starred_url: string;\r\n    subscriptions_url: string;\r\n    organizations_url: string;\r\n    repos_url: string;\r\n    events_url: string;\r\n    received_events_url: string;\r\n    type: string;\r\n    site_admin: boolean;\r\n    score: number;\r\n}\r\ninterface LoaderData {\r\n    user: User;\r\n    query: string;\r\n    page: number;\r\n    limit: number;\r\n}\r\n\r\nexport async function loader({ request }: { request: Request }) {\r\n    const url = new URL(request.url);\r\n    const search = new URLSearchParams(url.search);\r\n    const query = search.get(\"query\") || \"type:user\";\r\n    const page = parseInt(search.get(\"page\") || \"1\", 10);\r\n    const limit = parseInt(search.get(\"limit\") || \"10\", 10);\r\n    const username = search.get(\"user\");\r\n    try {\r\n        const apiUrl = `https://api.github.com/users/${username}`;\r\n        const response: AxiosResponse<{ items: User }> = await axios.get(apiUrl);\r\n        const user = response.data;\r\n        console.log(user)\r\n        return { user, query, page, limit };\r\n    } catch (error) {\r\n        if (axios.isAxiosError(error)) {\r\n            console.error('Error fetching data:', error.message);\r\n        } else {\r\n            console.error('Unknown error:', error);\r\n        }\r\n        return { user: [], query: \"\", page: 1, limit: 10 };\r\n\r\n    }\r\n}\r\nconst Deatils = () => {\r\n    const { user } = useLoaderData<LoaderData>();\r\n    const dispath = useAppDispatch()\r\n\r\n    useEffect(() => {\r\n        dispath(setClickedUser(user))\r\n    }, [user])\r\n    const { state } = useNavigation();\r\n    console.log(state)\r\n    return (\r\n        <>\r\n\r\n            {state === 'loading' && (\r\n                <div style={{ width: \"100%\", height: \"100vh\", position: \"relative\", zIndex: \"111111\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n                    <Spinner />\r\n\r\n                </div>\r\n            )\r\n            }\r\n            <App />\r\n            <Background />\r\n            <UserData />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Deatils; ", "\r\nimport React, { useState } from 'react';\r\nimport Spinner from '../Spinner';\r\nimport { useSelector } from 'react-redux';\r\nimport { isLoadingUserDataSelector } from '@/store/selectors/isLoadingUserData';\r\nimport { getThemeSelector } from '@/store/selectors/getTheme';\r\nimport { clickedUserSelector } from '@/store/selectors/getClickedElement';\r\nimport { paramsSelector } from '@/store/selectors/getSearchParams';\r\nimport { Link } from '@remix-run/react';\r\n\r\nconst UserData: React.FC = () => {\r\n  const isDark = useSelector(getThemeSelector);\r\n  const params = useSelector(paramsSelector);\r\n  const clickedUser = useSelector(clickedUserSelector);\r\n  const loading = useSelector(isLoadingUserDataSelector);\r\n  const [isHovering, setIsHovering] = useState(false);\r\n\r\n  const handleMouseEnter = () => setIsHovering(true);\r\n  const handleMouseLeave = () => setIsHovering(false);\r\n\r\n  return (\r\n    <aside\r\n      style={{\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        flexDirection: 'column',\r\n        position: 'fixed',\r\n        right: 0,\r\n        top: 0,\r\n        width: '40%',\r\n        backgroundColor: isDark ? 'rgb(80, 75, 75)' : 'rgb(172, 164, 154)',\r\n        height: '100vh',\r\n        transition: '1s',\r\n      }}\r\n    >\r\n      {loading && <Spinner data-testid=\"spinner\" />}\r\n      <div>\r\n        <h2>{clickedUser.login}</h2>\r\n        <img\r\n          src={clickedUser.avatar_url}\r\n          alt={`${clickedUser.login}'s avatar`}\r\n          style={{\r\n            borderRadius: '50%',\r\n            maxWidth: '100px', // Adjusted size for a more appropriate display\r\n          }}\r\n        />\r\n        <p>ID: {clickedUser.id}</p>\r\n        <p>Type: {clickedUser.type}</p>\r\n      </div>\r\n      <Link\r\n        to={`/?page=${params.offset}${params.query ? `&query=${params.query}` : ''}`}\r\n        style={{\r\n          marginTop: '30px',\r\n          padding: '20px',\r\n          maxWidth: '90%',\r\n          width: '100%',\r\n          cursor: 'pointer',\r\n          borderRadius: '20px',\r\n          fontSize: '30px',\r\n          textAlign: 'center',\r\n          textDecoration: 'none',\r\n          color: isHovering ? '#fff' : '#000',\r\n          backgroundColor: isHovering ? 'rgb(90, 90, 190)' : 'transparent',\r\n          transition: '1s',\r\n        }}\r\n        onMouseEnter={handleMouseEnter}\r\n        onMouseLeave={handleMouseLeave}\r\n      >\r\n        Close\r\n      </Link>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default UserData;\r\n\r\n/* \r\n \r\n//import './styles.scss';\r\nimport Spinner from '../Spinner';\r\n \r\n\r\nimport { useSelector } from 'react-redux';\r\n \r\nimport { isLoadingUserDataSelector } from '@/store/selectors/isLoadingUserData';\r\nimport { getThemeSelector } from '@/store/selectors/getTheme';\r\nimport { clickedUserSelector } from '@/store/selectors/getClickedElement';\r\nimport { paramsSelector } from '@/store/selectors/getSearchParams';\r\nimport { Link } from '@remix-run/react';\r\nconst UserData = () => {\r\n\t \r\n\tconst isDark = useSelector(getThemeSelector)\r\n const params = useSelector(paramsSelector)\r\n const clickedUser = useSelector(clickedUserSelector)\r\n\tconst loading = useSelector(isLoadingUserDataSelector);\r\n \r\n\treturn (\r\n\t\t<aside className={`sidebar ${isDark ? `sidebar-dark` : ''}`}>\r\n\t\t\t{loading && <Spinner data-testid=\"spinner\" />}\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{clickedUser.login}</h2>\r\n\t\t\t\t\t<img src={clickedUser.avatar_url} alt={`${clickedUser.login}'s avatar`} />\r\n\t\t\t\t\t<p>ID: {clickedUser.id}</p>\r\n\t\t\t\t\t<p>Type: {clickedUser.type}</p>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t \r\n\r\n\t\t\t<Link to={`/?page=${params.offset}${params.query ? `&query=${params.query}` : ``}`}>\r\n\t\t\tClose\r\n\t\t\t</Link>\r\n\t\t</aside>\r\n\t);\r\n};\r\n\r\nexport default UserData;\r\n*/", "import React from 'react';\r\n\r\nconst Spinner: React.FC = () => {\r\n  const styles: React.CSSProperties = {\r\n    width: '48px',\r\n    height: '48px',\r\n    border: '5px solid #fff',\r\n    borderBottomColor: '#7700ff',\r\n    borderRadius: '50%',\r\n    display: 'inline-block',\r\n    boxSizing: 'border-box',\r\n    animation: 'spin 0.8s linear infinite',\r\n    margin: '0 auto',\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    zIndex: 111111111111111111,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <style>\r\n        {`\r\n          @keyframes spin {\r\n            0% { transform: rotate(0deg); }\r\n            100% { transform: rotate(360deg); }\r\n          }\r\n        `}\r\n      </style>\r\n      <span style={styles} data-testid=\"loader\"></span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n\r\n\r\n//import './index.scss';\r\n/*\r\nconst Spinner = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<span className=\"loader\" data-testid=\"loader\"></span>\r\n\t\t</>\r\n\t);\r\n};\r\nexport default Spinner;\r\n*/", "import { RootState } from '../store';\r\nexport const isLoadingUserDataSelector = (state: RootState) => state.appSlice.isLoadingUserData;\r\n", "import { RootState } from '../store';\r\nexport const getThemeSelector = (state: RootState) => state.themeSlice.isDark\r\n ", "import { RootState } from '../store';\r\nexport const clickedUserSelector = (state: RootState) => state.appSlice.clickedUser;", "import { RootState } from '../store';\r\n\r\nexport const paramsSelector = (state: RootState) => {\r\n\tconst appSlice = state.appSlice || {};\r\n\treturn appSlice.params || { query: '', offset: 1, limit: 10, storedValue: '' };\r\n};\r\n", "import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport ThemeButton from '../ThemeButton';\nimport useURL from '@/hooks/useURL';\nimport { useSelector } from 'react-redux';\nimport { getThemeSelector } from '@/store/selectors/getTheme';\nimport { Link } from '@remix-run/react';\nimport React, { CSSProperties } from 'react';\n\nconst Header = () => {\n  const isDark = useSelector(getThemeSelector);\n  const { handleInput, handleSearch } = useURL();\n\n  return (\n    <header style={{ ...styles.header, ...(isDark ? styles.headerDark : {}) }}>\r\n      <div style={styles.content}>\r\n        <nav style={styles.search}>\r\n          <input\n            type=\"text\"\n            style={styles.searchBar}\n            placeholder=\"Search...\"\n            onChange={handleInput} />\n          \r\n          <button\n            style={styles.searchBtn}\n            onClick={handleSearch}\n            aria-label=\"search\">\n            \r\n            <FontAwesomeIcon icon={faSearch} />\r\n          </button>\r\n        </nav>\r\n\r\n        <Link to=\"/dcfewfe\" style={styles.redirectBtn}>\r\n          Redirect to not found page\r\n        </Link>\r\n        <ThemeButton />\r\n      </div>\r\n    </header>);\n\n};\n\nconst styles: Record<string, CSSProperties> = {\n  header: {\n    width: '100%',\n    backgroundColor: 'rgb(212, 201, 188)',\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    zIndex: 11,\n    transition: '1s'\n  },\n  content: {\n    height: '90px',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '0 15px'\n  },\n  search: {\n    maxWidth: '700px',\n    width: '100%',\n    display: 'flex'\n  },\n  headerDark: {\n    backgroundColor: 'rgb(43, 41, 41)'\n  },\n  searchBar: {\n    width: '100%',\n    padding: '5px 10px'\n  },\n  searchBtn: {\n    padding: '5px',\n    transition: '1s',\n    cursor: 'pointer',\n    backgroundColor: 'transparent'\n  },\n  redirectBtn: {\n    cursor: 'pointer',\n    padding: '7px',\n    marginLeft: '10px',\n    transition: '1s',\n    textDecoration: 'none',\n    color: 'inherit'\n  }\n};\n\nexport default Header;\n\n\n/*\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport './index.css';\r\nimport ThemeButton from '../ThemeButton';\r\nimport useURL from '@/hooks/useURL';\r\nimport { useSelector } from 'react-redux';\r\nimport { getThemeSelector } from '@/store/selectors/getTheme';\r\nimport { Link } from '@remix-run/react';\r\nconst Header = () => {\r\nconst isDark = useSelector(getThemeSelector)\r\nconst { handleInput, handleSearch \r\n} = useURL();\r\nreturn (\r\n\t<header className={`header ${isDark ? `header-dark` : ''}`}>\r\n\t\t<div className=\"header__content\">\r\n\t\t\t<nav className=\"header__search\">\r\n\t\t\t\t<input type=\"text\" className=\"search__bar\" placeholder=\"Search...\" onChange={handleInput} />\r\n\t\t\t\t<button className=\"search__btn\" onClick={handleSearch}\r\n\t\t\t\t aria-label=\"search\">\r\n\t\t\t\t\t<FontAwesomeIcon icon={faSearch} />\r\n\t\t\t\t</button>\r\n\t\t\t</nav>\r\n\t\t \r\n\t\t\t<Link to=\"/dcfewfe\">\r\n\t\t\tRedirect to not found page\r\n\t\t\t</Link>\r\n\t\t\t<ThemeButton />\r\n\t\t</div>\r\n\t</header>\r\n);\r\n};\r\nexport default Header;\r\n*/", "\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getThemeSelector } from '../../store/selectors/getTheme';\r\nimport { useAppDispatch } from '../../hooks/redux';\r\nimport { setTheme } from '../../store/slices/themeSlice';\r\nimport { CSSProperties } from 'react';\r\n\r\nconst ThemeButton: React.FC = () => {\r\n  const isDark = useSelector(getThemeSelector);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const handleClick = () => {\r\n    dispatch(setTheme());\r\n  };\r\n\r\n  return (\r\n    <button\r\n      style={isDark ? { ...styles.button, ...styles.buttonDark } : styles.button}\r\n      onClick={handleClick}\r\n    >\r\n      Switch Theme {isDark ? 'Dark' : 'Light'}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst styles: Record<string, CSSProperties> = {\r\n  button: {\r\n    cursor: 'pointer',\r\n    padding: '7px',\r\n    marginLeft: '10px',\r\n    transition: '1s',\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    color: '#000',\r\n  },\r\n  buttonDark: {\r\n    backgroundColor: 'rgb(90, 90, 190)',\r\n    color: '#fff',\r\n  },\r\n};\r\n\r\nexport default ThemeButton;\r\n\r\n/*\r\n//import './index.scss';\r\nimport { useSelector } from 'react-redux';\r\nimport { getThemeSelector } from \"../../store/selectors/getTheme\"\r\n\r\nimport { useAppDispatch } from '../../hooks/redux';\r\nimport { setTheme } from '../../store/slices/themeSlice';\r\nconst ThemeButton = () => {\r\n\tconst isDark  = useSelector(getThemeSelector)\r\n\tconst dispatch = useAppDispatch()\r\n\tconst handleClick = () => {\r\n\t\tdispatch(setTheme())\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button className=\"theme__button\" onClick={handleClick}>\r\n\t\t\t\tSwitch Theme {isDark ? 'Dark' : 'Light'}\r\n\t\t\t</button>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ThemeButton;\r\n*/", "import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport { AppDispatch, RootState } from '@/store/store';\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n", "import { useEffect } from 'react';\r\n \r\nimport { paramsSelector } from '../store/selectors/getSearchParams';\r\n\r\nimport { useAppDispatch } from './redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { setQueryActionCreator } from '../store/action-creators/setSearchParamsActionCreator';\r\nimport { setSearchParamsActionCreator } from '../store/action-creators/setSearchParamsActionCreator';\r\n  \r\n \r\nimport { useNavigate, useLocation } from \"@remix-run/react\";\r\n \r\n\r\nconst useURL = () => {\r\n\tconst navigate = useNavigate();\r\n\tconst location = useLocation();\r\n\tconst dispatch = useAppDispatch();\r\n\tconst searchParams = useSelector(paramsSelector)\r\n\t \r\nconst setPage = (page: number, query: string) => {\r\n   \r\n    \r\n    const params = new URLSearchParams(location.search);\r\n\r\n    params.set(\"page\", String(page));\r\n\r\n    if (query) {\r\n        params.set(\"query\", query);\r\n    } else {\r\n        params.delete(\"query\"); \r\n    }\r\n\r\n    navigate(`?${params.toString()}`);\r\n    console.log(\"Navigated to:\", `?${params.toString()}`);\r\n};\r\n \r\ninterface ParamsTypes {\r\n    query: string;\r\n    page: number;\r\n}\r\n\r\nconst getPageAndQuery = (): ParamsTypes => {\r\n    const params = new URLSearchParams(location.search);\r\n \r\n    const page = parseInt(params.get(\"page\") || '1', 10);\r\n    const query = params.get(\"query\") || '';\r\n\r\n    return { page, query };\r\n};\r\n\r\nuseEffect(() => {\r\nconst params  = getPageAndQuery()\r\n\t\tsetPage(Number(params.page), String(params.query));\r\n\t\tlocalStorage.setItem('searchParam', String(params.query));\r\n\t\tdispatch(setSearchParamsActionCreator(Number(params.page), String(params.query)));\r\n\t}, []);\r\n\t \r\n\t\r\n\tconst handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tdispatch(setQueryActionCreator(event.target.value));\r\n\t};\r\n\tconst handleSearch = () => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t\tdispatch(setSearchParamsActionCreator(1, searchParams.query));\r\n\t\tconst params = new URLSearchParams(location.search);\r\n\t\tparams.set(\"page\", String(1));\r\n\t\tparams.set(\"query\", String(searchParams.query))\r\n\t\r\n\t\r\n\t\tnavigate(`?${params.toString()}`);\r\n\t} \r\n\treturn {   setPage, handleInput,\r\n\t\t handleSearch,\r\n\t };\r\n};\r\nexport default useURL;\r\n", "import { setSearchParamsURL, setNextPage, setPrevPage, setQueryPage, setFirstPage } from '../slices/appSlice';\r\nimport { AppDispatch } from '../store';\r\nexport const setSearchParamsActionCreator = (offset: number, query: string) => (dispatch: AppDispatch) => {\r\n\tdispatch(setSearchParamsURL({ offset, query }));\r\n};\r\nexport const setFirstPageActionCreator = () => (dispatch: AppDispatch) => {\r\n\tdispatch(setFirstPage());\r\n};\r\nexport const setNextPageActionCreator = () => (dispatch: AppDispatch) => {\r\n\tdispatch(setNextPage());\r\n};\r\nexport const setPrevPageActionCreator = () => (dispatch: AppDispatch) => {\r\n\tdispatch(setPrevPage());\r\n};\r\nexport const setQueryActionCreator = (query: string) => (dispatch: AppDispatch) => {\r\n\tdispatch(setQueryPage(query));\r\n};\r\n", "import { setAddToStoredElement } from '../slices/selectedElementsSlice';\r\nimport { AppDispatch } from '../store';\r\nimport { UserItem } from '../types';\r\nexport const AddElementToStorage = (user: UserItem) => (dispatch: AppDispatch) => {\r\n\tdispatch(setAddToStoredElement(user));\r\n};\r\n", "import React from 'react';\r\nimport { useAppDispatch } from \"../../hooks/redux\";\r\nimport { AddElementToStorage } from \"../../store/action-creators/addElementToStorage\";\r\nimport { useSelector } from 'react-redux';\r\nimport { storedUsersSelector } from '../../store/selectors/getStoredElements';\r\nimport { UserItem } from './types';\r\nimport { getThemeSelector } from '../../store/selectors/getTheme';\r\nimport { useNavigate, useLocation } from '@remix-run/react';\r\nimport { paramsSelector } from '../../store/selectors/getSearchParams';\r\nimport { CSSProperties } from 'react';\r\n\r\nconst Card: React.FC<UserItem> = ({ user }) => {\r\n  const dispatch = useAppDispatch();\r\n  const isDark = useSelector(getThemeSelector);\r\n  const users = useSelector(storedUsersSelector);\r\n  const params = useSelector(paramsSelector);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const handleCheckboxChange = () => {\r\n    dispatch(AddElementToStorage(user));\r\n  };\r\n\r\n  const handleDetailsClick = () => {\r\n\tconsole.log(11)\r\n    const queryParams = new URLSearchParams();\r\n    queryParams.append('page', String(params.offset));\r\n    if (params.query) {\r\n      queryParams.append('query', params.query);\r\n    }\r\n    queryParams.append('user', user.login);\r\n\r\n    navigate(`/details?${queryParams.toString()}`, { state: { from: location } });\r\n  };\r\n\r\n  return (\r\n    <div style={styles.userLink}>\r\n      <div style={{ ...styles.user, ...(isDark ? styles.userDark : {}) }}>\r\n        <img className=\"user__logo\" src={user.avatar_url} alt=\"user\" style={styles.userLogo} />\r\n        <div style={styles.userContent}>\r\n          <p style={styles.userLogin}>{user.login}</p>\r\n          <input\r\n            type=\"checkbox\"\r\n            style={styles.userCheckbox}\r\n            onChange={handleCheckboxChange}\r\n            checked={users && users.some((storedUser) => user.id === storedUser.id)}\r\n            readOnly\r\n          />\r\n          <button onClick={handleDetailsClick} style={styles.userDetails}>\r\n            Show details\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles: Record<string, CSSProperties> = {\r\n  userLink: {\r\n    textDecoration: 'none',\r\n    color: '#000',\r\n  },\r\n  user: {\r\n    padding: '40px 20px',\r\n    fontSize: '32px',\r\n    backgroundColor: 'rgb(201, 174, 124)',\r\n    display: 'flex',\r\n    transition: '0.5s ease-in-out',\r\n    alignItems: 'flex-start',\r\n    cursor: 'pointer',\r\n  },\r\n  userLogo: {\r\n    borderRadius: '50%',\r\n    maxWidth: '300px',\r\n  },\r\n  userDark: {\r\n    backgroundColor: 'rgb(73, 71, 71)',\r\n    color: '#fff',\r\n  },\r\n  userContent: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    rowGap: '20px',\r\n    marginLeft: '20px',\r\n  },\r\n  userLogin: {\r\n    fontSize: '1.2rem',\r\n    fontWeight: 'bold',\r\n  },\r\n  userCheckbox: {\r\n    position: 'relative',\r\n    width: '20px',\r\n    height: '20px',\r\n    backgroundColor: '#fff',\r\n    border: '1px solid #ccc',\r\n    borderRadius: '4px',\r\n    cursor: 'pointer',\r\n    outline: 'none',\r\n    transition: 'background-color 0.3s',\r\n  },\r\n  userCheckboxHover: {\r\n    backgroundColor: '#f0f0f0',\r\n  },\r\n  userDetails: {\r\n    fontSize: '24px',\r\n    cursor: 'pointer',\r\n    padding: '10px 25px',\r\n    transition: '1s',\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n    color: '#000',\r\n  },\r\n  userDetailsHover: {\r\n    backgroundColor: 'rgb(90, 90, 190)',\r\n    color: '#fff',\r\n  },\r\n};\r\n\r\nexport default Card;\r\n\r\n\r\n/*\r\nimport './index';\r\n\r\nimport { useAppDispatch } from \"../../hooks/redux\";\r\nimport { AddElementToStorage } from \"../../store/action-creators/addElementToStorage\";\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { storedUsersSelector } from '../../store/selectors/getStoredElements';\r\nimport { UserItem } from './types';\r\nimport { getThemeSelector } from '../../store/selectors/getTheme';\r\nimport { useNavigate, useLocation } from '@remix-run/react';\r\nimport { paramsSelector } from '../../store/selectors/getSearchParams';\r\n\r\nconst Card = ({ user }: UserItem) => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst isDark = useSelector(getThemeSelector);\r\n\tconst users = useSelector(storedUsersSelector);\r\n\tconst params = useSelector(paramsSelector);\r\n\tconst navigate = useNavigate();\r\n\tconst location = useLocation();\r\n\r\n\tconst handleCheckboxChange = () => {\r\n\t\tdispatch(AddElementToStorage(user));\r\n\t};\r\n\r\n\tconst handleDetailsClick = () => {\r\n\t\tconst queryParams = new URLSearchParams();\r\n\t\tqueryParams.append('page', String(params.offset));\r\n\t\tif (params.query) {\r\n\t\t\tqueryParams.append('query', params.query);\r\n\t\t}\r\n\t\tqueryParams.append('user', user.login);\r\n\r\n\t\tnavigate(`/details?${queryParams.toString()}`, { state: { from: location } });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"user__link\">\r\n\t\t\t<div className={`user ${isDark ? `user-dark` : ``}`}>\r\n\t\t\t\t<img className=\"user__logo\" src={user.avatar_url} alt=\"user\" />\r\n\t\t\t\t<div className=\"user__content\">\r\n\t\t\t\t\t<p className=\"user__login\">{user.login}</p>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tclassName=\"user__checkbox\"\r\n\t\t\t\t\t\tonChange={handleCheckboxChange}\r\n\t\t\t\t\t\tchecked={users && users.some((storedUser) => user.id === storedUser.id)}\r\n\t\t\t\t\t\treadOnly\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={handleDetailsClick}>\r\n\t\t\t\t\t\tShow details\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Card;\r\n */", "import { RootState } from '../store';\r\nexport const storedUsersSelector = (state: RootState) => state.selectedElementsSlice.storedElements || [];\r\n", "import React from 'react';\r\nimport Spinner from '../Spinner';\r\nimport Card from '../Card';\r\nimport { useAppDispatch } from '../../hooks/redux';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  setNextPageActionCreator,\r\n  setPrevPageActionCreator,\r\n} from '../../store/action-creators/setSearchParamsActionCreator';\r\nimport { paramsSelector } from '../../store/selectors/getSearchParams';\r\nimport { getUsersSelector } from '../../store/selectors/getUsersSelector';\r\nimport { isLoadingSelector } from '../../store/selectors/isLoadingSelector';\r\nimport useURL from '../../hooks/useURL';\r\nimport { CSSProperties } from 'react';\r\n\r\nconst List: React.FC = () => {\r\n  const { setPage } = useURL();\r\n  const dispatch = useAppDispatch();\r\n  const users = useSelector(getUsersSelector);\r\n  const params = useSelector(paramsSelector);\r\n  const isLoading = useSelector(isLoadingSelector);\r\n\r\n  const handleNext = () => {\r\n    window.scrollTo(0, 0);\r\n    dispatch(setNextPageActionCreator());\r\n    setPage(params.offset + 1, params.query);\r\n  };\r\n\r\n  const handlePrev = () => {\r\n    window.scrollTo(0, 0);\r\n    dispatch(setPrevPageActionCreator());\r\n    setPage(params.offset - 1, params.query);\r\n  };\r\n\r\n  return (\r\n    <section style={styles.list}>\r\n      <div style={styles.container}>\r\n        {isLoading && <Spinner />}\r\n        {users.map((item) => (\r\n          <Card user={item} key={item.id} />\r\n        ))}\r\n        {users.length === 0 && <p style={styles.nothing}>Nothing found</p>}\r\n        <div style={styles.btns}>\r\n          <button style={styles.btn} onClick={handlePrev}>\r\n            Prev\r\n          </button>\r\n          <button style={{ ...styles.btn, ...styles.next }} onClick={handleNext} data-testid=\"next\">\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst styles: Record<string, CSSProperties> = {\r\n  list: {\r\n    marginTop: '90px',\r\n  },\r\n  container: {\r\n    // Additional styles if needed\r\n  },\r\n  btns: {\r\n    display: 'flex',\r\n    columnGap: '30px',\r\n    justifyContent: 'center',\r\n    marginTop: '20px',\r\n  },\r\n  btn: {\r\n    padding: '10px 25px',\r\n    cursor: 'pointer',\r\n    transition: '1s',\r\n    fontSize: '30px',\r\n    backgroundColor: 'transparent',\r\n    border: 'none',\r\n  },\r\n  next: {\r\n    // Styles for the \"Next\" button if different from the \"Prev\" button\r\n  },\r\n  btnHover: {\r\n    backgroundColor: 'rgb(90, 90, 190)',\r\n    color: '#fff',\r\n  },\r\n  nothing: {\r\n    fontSize: '44px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  error: {\r\n    fontSize: '56px',\r\n    textAlign: 'center',\r\n  },\r\n};\r\n\r\nexport default List;\r\n\r\n\r\n/*\r\n//import './index.scss';\r\nimport Spinner from '../Spinner';\r\nimport Card from '../Card';\r\nimport { useAppDispatch } from '../..//hooks/redux';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n\tsetNextPageActionCreator,\r\n\tsetPrevPageActionCreator,\r\n} from '../../store/action-creators/setSearchParamsActionCreator';\r\nimport { paramsSelector } from '../../store/selectors/getSearchParams';\r\nimport { getUsersSelector } from '../../store/selectors/getUsersSelector';\r\nimport { isLoadingSelector } from '../../store/selectors/isLoadingSelector';\r\nimport useURL from '../../hooks/useURL';\r\n\r\nconst List = () => {\r\n\tconst { setPage } = useURL();\r\n\tconst dispatch = useAppDispatch();\r\n\tconst users = useSelector(getUsersSelector);\r\n\tconst params = useSelector(paramsSelector);\r\n\tconst isLoading = useSelector(isLoadingSelector);\r\n\r\n\tconst handleNext = () => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t\tdispatch(setNextPageActionCreator());\r\n\t\tsetPage(params.offset+1, params.query);\r\n\t};\r\n\r\n\tconst handlePrev = () => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t\tdispatch(setPrevPageActionCreator());\r\n\t\tsetPage(params.offset-1, params.query);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section className=\"list\">\r\n\t\t\t<div className=\"list__container\">\r\n\t\t\t\t{isLoading && <Spinner />}\r\n\t\t\t\t{users.map((item) => (\r\n\t\t\t\t\t<Card user={item} key={item.id} />\r\n\t\t\t\t))}\r\n\t\t\t\t{users.length == 0 && <p className=\"list__nothing\">Nothing found</p>}\r\n\r\n\t\t\t\t<div className=\"list__btns\">\r\n\t\t\t\t\t<button className=\"list__prev list__btn\" onClick={handlePrev}>\r\n\t\t\t\t\t\tPrev\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button className=\"list__next list__btn\" onClick={handleNext} data-testid=\"next\">\r\n\t\t\t\t\t\tNext\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default List;\r\n*/", "import { RootState } from '../store';\r\nexport const getUsersSelector = (state: RootState) => state.appSlice.users;\r\n", "import { RootState } from '../store';\r\nexport const isLoadingSelector = (state: RootState) => state.appSlice.isLoading;\r\n", "import Header from '../Header';\r\nimport List from '../List';\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { storedUsersSelector } from '../../store/selectors/getStoredElements';\r\nimport StoredUsersButton from '../StoredUsersFlyoutElement';\r\nimport Background from '../Background';\r\nimport { useAppDispatch } from '../../hooks/redux';\r\nimport { setStoredInLocalStorageActionCreator } from '../../store/action-creators/setStoredInLocalStorageQuery';\r\nimport { isLoadingSelector } from '../../store/selectors/isLoadingSelector';\r\nimport Spinner from '../Spinner';\r\n\r\nimport { useNavigation } from '@remix-run/react';\r\n \r\n\r\nconst App = () => {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst storedUsers = useSelector(storedUsersSelector);\r\n\tconst isLoading = useSelector(isLoadingSelector);\r\n\tuseEffect(() => {\r\n\t\tdispatch(\r\n\t\t\tsetStoredInLocalStorageActionCreator(\r\n\t\t\t\tString(localStorage.getItem('searchParam') != null ? localStorage.getItem('searchParam') : ''),\r\n\t\t\t),\r\n\t\t);\r\n\t}, []);\r\n\r\n\t \r\n\treturn (\r\n\t\t<>\r\n\t \r\n\t\t\t<div className=\"container\">\r\n\t\t\t<Header />\r\n\t\t\t\t<List />\r\n\t\t\t\t{storedUsers.length > 0 && <StoredUsersButton />}\r\n\r\n\t\t\t</div>\r\n\t\t\t<Background />\r\n\r\n\t\t\t\r\n\t\t \r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n ", "import React, { useState } from 'react';\r\nimport { useAppDispatch } from '@/hooks/redux';\r\nimport { clearStoredElementsActionCreator } from '@/store/action-creators/clearStoredElementsActionCreator';\r\nimport { useSelector } from 'react-redux';\r\nimport { storedUsersSelector } from '@/store/selectors/getStoredElements';\r\n\r\nconst StoredUsersButton: React.FC = () => {\r\n  const dispatch = useAppDispatch();\r\n  const users = useSelector(storedUsersSelector);\r\n  const [url, setUrl] = useState<string | undefined>();\r\n\r\n  const handleClear = () => {\r\n    dispatch(clearStoredElementsActionCreator());\r\n  };\r\n\r\n  const handleDownload = () => {\r\n    if (users.length === 0) return;\r\n\r\n    const titleKeys = Object.keys(users[0]);\r\n    const refinedData = [titleKeys];\r\n    users.forEach((item) => {\r\n      refinedData.push(Object.values(item).map((value) => String(value)));\r\n    });\r\n\r\n    let csvContent = '';\r\n    refinedData.forEach((row) => {\r\n      csvContent += row.join(';') + '\\n';\r\n    });\r\n\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8' });\r\n    const url = URL.createObjectURL(blob);\r\n    setUrl(url);\r\n  };\r\n\r\n  return (\r\n    <div style={styles.panel}>\r\n      <p style={styles.text}>You chose {users.length} users</p>\r\n      <div style={styles.buttons}>\r\n        <a\r\n          style={{ ...styles.button, ...styles.downloadHover }}\r\n          href={url}\r\n          download={`${users.length}__users.csv`}\r\n          onClick={handleDownload}\r\n        >\r\n          download\r\n        </a>\r\n        <button\r\n          style={{ ...styles.button, ...styles.clearButton }}\r\n          onClick={handleClear}\r\n        >\r\n          Unselect all\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles: Record<string, React.CSSProperties> = {\r\n  panel: {\r\n    padding: '17px',\r\n    position: 'fixed',\r\n    bottom: 0,\r\n    left: 0,\r\n    zIndex: 111,\r\n    backgroundColor: 'rgb(167, 158, 158)',\r\n    borderRadius: '20px',\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    columnGap: '20px',\r\n  },\r\n  button: {\r\n    cursor: 'pointer',\r\n    zIndex: 111,\r\n    padding: '7px',\r\n    fontSize: '35px',\r\n    maxWidth: '300px',\r\n    transition: '1s',\r\n    textDecoration: 'none',\r\n    color: 'black',\r\n  },\r\n  text: {\r\n    fontSize: '32px',\r\n  },\r\n  downloadHover: {\r\n    backgroundColor: 'rgb(90, 90, 190)',\r\n    color: '#fff',\r\n  },\r\n  clearButton: {\r\n    backgroundColor: 'rgb(158, 51, 51)',\r\n    color: '#fff',\r\n  },\r\n};\r\n\r\nexport default StoredUsersButton;\r\n ", "import { setClearStoredElements } from '../slices/selectedElementsSlice';\r\nimport { AppDispatch } from '../store';\r\nexport const clearStoredElementsActionCreator = () => (dispatch: AppDispatch) => {\r\n\tdispatch(setClearStoredElements());\r\n};\r\n", "import { CSSProperties } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getThemeSelector } from '../../store/selectors/getTheme';\r\n\r\nconst Background = () => {\r\n\tconst isDark = useSelector(getThemeSelector);\r\n\r\n\tconst backgroundStyle: CSSProperties = {\r\n\t\tbackgroundColor: isDark ? 'rgb(59, 59, 59)' : 'aliceblue',\r\n\t\twidth: '100%',\r\n\t\tminHeight: '100vh',\r\n\t\theight: '100%',\r\n\t\tposition: 'fixed',\r\n\t\tleft: 0,\r\n\t\ttop: 0,\r\n\t\tzIndex: -111,\r\n\t\ttransition: '1s',\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div style={backgroundStyle} data-testid=\"background\">\r\n\t\t\t{' '}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Background;\r\n\r\n\r\n/*\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { getThemeSelector } from '../../store/selectors/getTheme';\r\nconst Background = () => {\r\n\t const isDark = useSelector(getThemeSelector)\r\n\treturn (\r\n\t\t<div className={`background ${isDark ? `background-dark` : ''}`} data-testid=\"background\">\r\n\t\t\t{' '}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Background;\r\n\r\n */", "import { setStoredInLocalStorageQuery } from '../slices/appSlice';\r\nimport { AppDispatch } from '../store';\r\nexport const setStoredInLocalStorageActionCreator = (query: string) => (dispatch: AppDispatch) => {\r\n\tdispatch(setStoredInLocalStorageQuery(query));\r\n};\r\n", " \r\nimport React, { useEffect } from 'react';\r\nimport axios, { AxiosResponse } from 'axios';\r\nimport { useLoaderData } from \"@remix-run/react\";\r\n\r\n\r\nimport { useAppDispatch } from '../../src/hooks/redux'; \r\nimport { setUsersActionCreator } from \"../../src/store/action-creators/setUsersActionCreator\"\r\nimport App from \"../../src/components/App/index\"\r\nimport Background from '../../src/components/Background';\r\n \r\n import { useNavigation } from '@remix-run/react';\r\nimport Spinner from '@/components/Spinner';\r\n \r\ntype UserDataArray = Array<{\r\n  login: string;\r\n  id: number;\r\n  node_id: string;\r\n  avatar_url: string;\r\n  gravatar_id: string;\r\n  url: string;\r\n  html_url: string;\r\n  followers_url: string;\r\n  following_url: string;\r\n  gists_url: string;\r\n  starred_url: string;\r\n  subscriptions_url: string;\r\n  organizations_url: string;\r\n  repos_url: string;\r\n  events_url: string;\r\n  received_events_url: string;\r\n  type: string;\r\n  site_admin: boolean;\r\n  score: number;\r\n}>;\r\n\r\ninterface LoaderData {\r\n  users: UserDataArray;\r\n  query: string;\r\n  page: number;\r\n  limit: number;\r\n}\r\n\r\nexport async function loader({ request }: { request: Request }) {\r\n  const url = new URL(request.url);\r\n  const search = new URLSearchParams(url.search);\r\n  const query = search.get(\"query\") || \"type:user\";\r\n  const page = parseInt(search.get(\"page\") || \"1\", 10);\r\n  const limit = parseInt(search.get(\"limit\") || \"10\", 10);\r\n\r\n  try {\r\n    const apiUrl = `https://api.github.com/search/users?q=${query}&page=${page}&per_page=${limit}`;\r\n    const response: AxiosResponse<{ items: UserDataArray }> = await axios.get(apiUrl);\r\n    const users = response.data.items;\r\nconsole.log(users)\r\n    return { users, query, page, limit };\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error)) {\r\n      console.error('Error fetching data:', error.message);\r\n    } else {\r\n      console.error('Unknown error:', error);\r\n    }\r\n    return { users: [], query: \"\", page: 1, limit: 10 };\r\n \r\n  }\r\n}\r\n\r\nexport default function Index() {\r\n  const { users } = useLoaderData<LoaderData>();\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    if (users.length > 0) {\r\n      dispatch(setUsersActionCreator(users));\r\n    }\r\n  }, [users, dispatch]);\r\n  const { state } = useNavigation();\r\n  console.log(state)\r\n  return (\r\n\r\n   <>\r\n \r\n      {state === 'loading' && (\r\n    <div style={{width: \"100%\", height: \"100vh\",position: \"relative\", zIndex: \"111111\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\"} }>\r\n    <Spinner />\r\n \r\n    </div>\r\n\t\t\t)\r\n\t\t\t}\r\n      <App \r\n        />\r\n      <Background />\r\n      </>\r\n      \r\n      );\r\n}\r\n  \r\n", "import { setUsers } from '../slices/appSlice';\r\nimport { AppDispatch } from '../store';\r\nimport { UserDataArray } from '../types';\r\nexport const setUsersActionCreator = (data: UserDataArray) => (dispatch: AppDispatch) => {\r\n\tdispatch(setUsers(data));\r\n};\r\n", " \r\nimport NotFound from \"../../src/components/NotFound\";\r\nconst NotPage = () => {\r\n    return ( <>\r\n    <div  data-testid=\"not-found\">\r\n\r\n  <NotFound />\r\n    </div>\r\n    </> );\r\n}\r\n \r\nexport default NotPage;", "import { useNavigate } from \"@remix-run/react\";\r\nimport React from 'react';\r\n\r\nconst NotFound: React.FC = () => {\r\n  const navigate = useNavigate();\r\n  const handleBackToHomepage = () => {\r\n    navigate('/');\r\n  };\r\n  return (\r\n    <div style={styles.not} data-testid=\"not-found\">\r\n      <p style={styles.title}>404</p>\r\n      <p style={styles.text}>Page was not found</p>\r\n      <button onClick={handleBackToHomepage} style={styles.button}>\r\n        Back to homepage\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles: Record<string, React.CSSProperties> = {\r\n  not: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    height: '100vh',\r\n  },\r\n  title: {\r\n    fontSize: '106px',\r\n  },\r\n  text: {\r\n    fontSize: '56px',\r\n  },\r\n  button: {\r\n    marginTop: '30px',\r\n    padding: '20px',\r\n    cursor: 'pointer',\r\n    borderRadius: '20px',\r\n    fontSize: '30px',\r\n    transition: 'background-color 1s, color 1s',\r\n    backgroundColor: 'transparent',\r\n    color: '#000',\r\n    border: 'none',\r\n    textDecoration: 'none',\r\n  },\r\n  buttonHover: {\r\n    backgroundColor: 'rgb(90, 90, 190)',\r\n    color: '#fff',\r\n  },\r\n};\r\n\r\nexport default NotFound;\r\n", "export default {'entry':{'module':'/build/entry.client-642CQBNA.js','imports':['/build/_shared/chunk-ZWGWGGVF.js','/build/_shared/chunk-XFNXQ4IU.js','/build/_shared/chunk-JKX5JPF7.js','/build/_shared/chunk-2TPTIFO2.js','/build/_shared/chunk-WYKJAU76.js','/build/_shared/chunk-GIAAE3CH.js','/build/_shared/chunk-XU7DNSPJ.js','/build/_shared/chunk-BOXFZXVX.js','/build/_shared/chunk-UWV35TSL.js','/build/_shared/chunk-PNG5AS42.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-GLWUXGRW.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/$':{'id':'routes/$','parentId':'root','path':'*','index':undefined,'caseSensitive':undefined,'module':'/build/routes/$-MBVIMSKI.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/_index':{'id':'routes/_index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/_index-HNQFHEJY.js','imports':['/build/_shared/chunk-UJAXAMTK.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/details':{'id':'routes/details','parentId':'root','path':'details','index':undefined,'caseSensitive':undefined,'module':'/build/routes/details-2GLO2YK3.js','imports':['/build/_shared/chunk-UJAXAMTK.js'],'hasAction':false,'hasLoader':true,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false},'routes/errorpage.test':{'id':'routes/errorpage.test','parentId':'root','path':'errorpage/test','index':undefined,'caseSensitive':undefined,'module':'/build/routes/errorpage.test-BXALXYXV.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasClientAction':false,'hasClientLoader':false,'hasErrorBoundary':false}},'version':'a007dd31','hmr':{'runtime':'/build/_shared\\\\chunk-WYKJAU76.js','timestamp':1723301259196},'url':'/build/manifest-A007DD31.js'};", "\nimport * as entryServer from \"C:\\\\Users\\\\wotbl\\\\search-rs\\\\app\\\\entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes/errorpage.test.tsx\";\nimport * as route2 from \"./routes/details/index.tsx\";\nimport * as route3 from \"./routes/_index.tsx\";\nimport * as route4 from \"./routes/$.tsx\";\n  export const mode = \"development\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const future = {\"v3_fetcherPersist\":false,\"v3_relativeSplatPath\":false,\"v3_throwAbortReason\":false,\"unstable_singleFetch\":false,\"unstable_lazyRouteDiscovery\":false};\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/errorpage.test\": {\n      id: \"routes/errorpage.test\",\n      parentId: \"root\",\n      path: \"errorpage/test\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/details\": {\n      id: \"routes/details\",\n      parentId: \"root\",\n      path: \"details\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/_index\": {\n      id: \"routes/_index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/$\": {\n      id: \"routes/$\",\n      parentId: \"root\",\n      path: \"*\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    }\n  };"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAAA;AAMA,SAAS,mBAAmB;AAG5B,SAAS,wCAAwC;AACjD,SAAS,mBAAmB;AAC5B,SAAS,aAAa;AACtB,SAAS,8BAA8B;AAsCjC;AApCN,IAAM,cAAc;AAEL,SAAR,cACL,SACA,oBACA,iBACA,cAIA,aACA;AACA,SAAO,MAAM,QAAQ,QAAQ,IAAI,YAAY,KAAK,EAAE,IAChD;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IACA;AAAA,IACE;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACN;AAEA,SAAS,iBACP,SACA,oBACA,iBACA,cACA;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAI,gBAAgB,IACd,EAAE,MAAM,MAAM,IAAI;AAAA,MACtB;AAAA,QAAC;AAAA;AAAA,UACC,SAAS;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,YAAY;AAAA;AAAA,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,MACA;AAAA,QACE,aAAa;AACX,0BAAgB;AAChB,cAAM,OAAO,IAAI,YAAY,GACvB,SAAS,iCAAiC,IAAI;AAEpD,0BAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,YACE,IAAI,SAAS,QAAQ;AAAA,cACnB,SAAS;AAAA,cACT,QAAQ;AAAA,YACV,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,aAAa,OAAgB;AAC3B,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,QAAQ,OAAgB;AACtB,+BAAqB,KAIjB,iBACF,QAAQ,MAAM,KAAK;AAAA,QAEvB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;AAEA,SAAS,qBACP,SACA,oBACA,iBACA,cACA;AACA,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,QAAI,gBAAgB,IACd,EAAE,MAAM,MAAM,IAAI;AAAA,MACtB;AAAA,QAAC;AAAA;AAAA,UACC,SAAS;AAAA,UACT,KAAK,QAAQ;AAAA,UACb,YAAY;AAAA;AAAA,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIA;AAAA,MACA;AAAA,QACE,eAAe;AACb,0BAAgB;AAChB,cAAM,OAAO,IAAI,YAAY,GACvB,SAAS,iCAAiC,IAAI;AAEpD,0BAAgB,IAAI,gBAAgB,WAAW,GAE/C;AAAA,YACE,IAAI,SAAS,QAAQ;AAAA,cACnB,SAAS;AAAA,cACT,QAAQ;AAAA,YACV,CAAC;AAAA,UACH,GAEA,KAAK,IAAI;AAAA,QACX;AAAA,QACA,aAAa,OAAgB;AAC3B,iBAAO,KAAK;AAAA,QACd;AAAA,QACA,QAAQ,OAAgB;AACtB,+BAAqB,KAIjB,iBACF,QAAQ,MAAM,KAAK;AAAA,QAEvB;AAAA,MACF;AAAA,IACF;AAEA,eAAW,OAAO,WAAW;AAAA,EAC/B,CAAC;AACH;;;AC3IA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EACE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,OACK;AAEP,SAAS,gBAAgB;;;ACNzB,SAAS,iBAAiB,sBAAsB;;;ACFhD,SAAS,mBAAmC;AAQrC,IAAM,eAA0B;AAAA,EACtC,WAAW;AAAA,EACX,OAAO;AAAA,EACP,mBAAmB;AAAA,EACnB,OAAO,CAAC;AAAA,EACR,YAAY;AAAA,EACZ,QAAQ;AAAA,IACP,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,OAAO;AAAA,IACP,aAAa;AAAA,EACd;AAAA,EACA,QAAQ;AAAA,EACR,aAAa;AAAA,IACZ,OAAO;AAAA,IACR,IAAI;AAAA,IACJ,SAAQ;AAAA,IACR,YAAY;AAAA,IACZ,aAAY;AAAA,IACZ,KAAI;AAAA,IACJ,UAAS;AAAA,IACT,eAAe;AAAA,IACf,eAAc;AAAA,IACd,WAAW;AAAA,IACX,aAAa;AAAA,IACb,mBAAoB;AAAA,IACpB,mBAAmB;AAAA,IACnB,WAAU;AAAA,IACV,YAAW;AAAA,IACX,qBAAoB;AAAA,IACpB,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,OAAO;AAAA,EACP;AAED,GACM,YAAY,YAAY;AAAA,EAC7B,MAAM;AAAA,EACN;AAAA,EACA,UAAU;AAAA,IACT,WAAW,OAAO,QAAgC;AACjD,YAAM,YAAY,OAAO;AAAA,IAC1B;AAAA,IACA,mBAAmB,OAAO,QAAgC;AACzD,YAAM,oBAAoB,OAAO;AAAA,IAClC;AAAA,IACA,SAAS,OAAO,QAAsC;AACrD,YAAM,QAAQ,OAAO;AAAA,IACtB;AAAA,IAEA,mBAAmB,OAAO,QAAoC;AAC7D,YAAM,OAAO,QAAQ,OAAO,QAAQ,OACpC,MAAM,OAAO,SAAS,OAAO,QAAQ;AAAA,IACtC;AAAA,IACA,aAAa,OAAO;AACnB,YAAM,OAAO,SAAS;AAAA,IACvB;AAAA,IACA,YAAY,OAAO;AAClB,YAAM,OAAO,SAAS,MAAM,OAAO,SAAS;AAAA,IAC7C;AAAA,IACA,YAAY,OAAO;AAClB,YAAM,OAAO,SAAS,MAAM,OAAO,SAAS;AAAA,IAC7C;AAAA,IACA,aAAa,OAAO,QAA+B;AAClD,YAAM,OAAO,QAAQ,OAAO;AAAA,IAC7B;AAAA,IACA,SAAS,OAAO,QAAsC;AACrD,YAAM,QAAQ,OAAO;AAAA,IACtB;AAAA,IACA,6BAA6B,OAAO,QAA+B;AAClE,YAAM,OAAO,cAAc,OAAO,SAClC,MAAM,OAAO,QAAQ,OAAO;AAAA,IAC7B;AAAA,IACA,cAAc,OAAO,QAA+B;AACpD,YAAM,aAAa,OAAO;AAAA,IAC1B;AAAA,IACA,kBAAkB,OAAO;AACzB,YAAM,OAAO,QAAM,MAAM,YACzB,MAAM,OAAO,cAAY,MAAM;AAAA,IAC9B;AAAA,IACA,eAAe,OAAO,QAA6B;AAEnD,YAAM,cAAc,OAAO;AAAA,IAEzB;AAAA,EACJ;AAID,CAAC,GACY;AAAA,EACZ;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAED,IAAI,UAAU,SACP,mBAAQ,UAAU;;;AClHzB,SAAS,eAAAA,oBAAkC;AAE3C,IAAMC,gBAAsC;AAAA,EAC3C,gBAAgB,CAAC;AAAA,EAEjB,iBAAiB;AAClB,GACM,wBAAwBD,aAAY;AAAA,EACzC,MAAM;AAAA,EACN,cAAAC;AAAA,EACA,UAAU;AAAA,IACT,sBAAsB,OAAO,QAAiC;AAC7D,MAAK,MAAM,eAAe,KAAK,CAAC,SAAS,KAAK,MAAM,OAAO,QAAQ,EAAE,IAGpE,MAAM,iBAAiB,MAAM,eAAe,OAAO,CAAC,SAAS,KAAK,MAAM,OAAO,QAAQ,EAAE,IAFzF,MAAM,iBAAiB,CAAC,GAAG,MAAM,gBAAgB,OAAO,OAAO;AAAA,IAIjE;AAAA,IACA,2BAA2B,OAAO,QAA+B;AAChE,YAAM,iBAAiB,MAAM,eAAe,OAAO,CAAC,SAAS,KAAK,MAAM,OAAO,OAAO;AAAA,IACvF;AAAA,IACA,uBAAuB,OAAO;AAC7B,YAAM,iBAAiB,CAAC;AAAA,IACzB;AAAA,IACA,mBAAmB,OAAO,QAAoD;AAC7E,MAAI,OAAO,WAAW,QAAQ,OAAO,WAAW,SAC/C,MAAM,kBAAkB,OAAO,UAEhC,QAAQ,IAAI,MAAM,eAAe;AAAA,IAClC;AAAA,EACD;AACD,CAAC,GACY,EAAE,uBAAuB,wBAAwB,oBAAoB,2BAA2B,IAC5G,sBAAsB,SAChB,gCAAQ,sBAAsB;;;AClCrC,SAAS,eAAAC,oBAAoB;AAe7B,IAAMC,gBAA2B;AAAA,EAChC,QAAQ;AAET,GACM,aAAaD,aAAY;AAAA,EAC9B,MAAM;AAAA,EACN,cAAAC;AAAA,EACA,UAAU;AAAA,IACT,SAAS,OAAO;AACf,YAAM,SAAS,CAAC,MAAM;AAAA,IACvB;AAAA,EAED;AAID,CAAC,GACY;AAAA,EACb;AACA,IAAI,WAAW,SACR,qBAAQ,WAAW;;;AH1BnB,IAAM,cAAc,gBAAgB;AAAA,EAC1C,UAAU;AAAA,EACV,uBAAuB;AAAA,EACvB,YAAY;AAEb,CAAC,GAEY,QAAQ,eAAe;AAAA,EACnC,SAAS;AAEV,CAAC;;;ADFO,mBAAAC,eAAA;AAND,SAAS,OAAO,EAAE,SAAS,GAAkC;AAElE,SAEE,gBAAAA,QAAC,UAAK,MAAK,MACT;AAAA,oBAAAA,QAAC,UACC;AAAA,sBAAAA,QAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,gBAAAA,QAAC,UAAK,MAAK,YAAW,SAAQ,yCAA9B;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,MACpE,gBAAAA,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,gBAAAA,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAJT;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,gBAAAA,QAAC,UACC;AAAA,sBAAAA,QAAC,YAAS,OAEP,YAFH;AAAA;AAAA;AAAA;AAAA,aAGA;AAAA,MACA,gBAAAA,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,gBAAAA,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,SANX;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OAdF;AAAA;AAAA;AAAA;AAAA,SAeA;AAEJ;AAEe,SAAR,MAAuB;AAC5B,SAAO,gBAAAA,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,SAAQ;AACjB;;;AKpCA;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAgB,aAAAC,kBAAiB;AACjC,OAAO,WAA8B;AACrC,SAAS,qBAAqB;;;ACD9B,SAAgB,gBAAgB;;;ACoB5B,mBACE,UAAAC,eADF;AAnBJ,IAAM,UAAoB,MAmBtB,gBAAAA,QAAA,YACE;AAAA,kBAAAA,QAAC,WACE;AAAA;AAAA;AAAA;AAAA;AAAA,aADH;AAAA;AAAA;AAAA;AAAA,SAOA;AAAA,EACA,gBAAAA,QAAC,UAAK,OA3B0B;AAAA,IAClC,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,mBAAmB;AAAA,IACnB,cAAc;AAAA,IACd,SAAS;AAAA,IACT,WAAW;AAAA,IACX,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,KAAK;AAAA,IACL,MAAM;AAAA,IACN,WAAW;AAAA,IACX,QAAQ;AAAA,EACV,GAYyB,eAAY,YAAjC;AAAA;AAAA;AAAA;AAAA,SAA0C;AAAA,KAT5C;AAAA;AAAA;AAAA;AAAA,OAUA,GAIG,kBAAQ;;;ADhCf,SAAS,mBAAmB;;;AEFrB,IAAM,4BAA4B,CAAC,UAAqB,MAAM,SAAS;;;ACAvE,IAAM,mBAAmB,CAAC,UAAqB,MAAM,WAAW;;;ACAhE,IAAM,sBAAsB,CAAC,UAAqB,MAAM,SAAS;;;ACCjE,IAAM,iBAAiB,CAAC,WACb,MAAM,YAAY,CAAC,GACpB,UAAU,EAAE,OAAO,IAAI,QAAQ,GAAG,OAAO,IAAI,aAAa,GAAG;;;ALI9E,SAAS,YAAY;AA4BH,mBAAAC,eAAA;AA1BlB,IAAM,WAAqB,MAAM;AAC/B,MAAM,SAAS,YAAY,gBAAgB,GACrC,SAAS,YAAY,cAAc,GACnC,cAAc,YAAY,mBAAmB,GAC7C,UAAU,YAAY,yBAAyB,GAC/C,CAAC,YAAY,aAAa,IAAI,SAAS,EAAK,GAE5C,mBAAmB,MAAM,cAAc,EAAI,GAC3C,mBAAmB,MAAM,cAAc,EAAK;AAElD,SACE,gBAAAA;AAAA,IAAC;AAAA;AAAA,MACC,OAAO;AAAA,QACL,SAAS;AAAA,QACT,YAAY;AAAA,QACZ,gBAAgB;AAAA,QAChB,eAAe;AAAA,QACf,UAAU;AAAA,QACV,OAAO;AAAA,QACP,KAAK;AAAA,QACL,OAAO;AAAA,QACP,iBAAiB,SAAS,oBAAoB;AAAA,QAC9C,QAAQ;AAAA,QACR,YAAY;AAAA,MACd;AAAA,MAEC;AAAA,mBAAW,gBAAAA,QAAC,mBAAQ,eAAY,aAArB;AAAA;AAAA;AAAA;AAAA,eAA+B;AAAA,QAC3C,gBAAAA,QAAC,SACC;AAAA,0BAAAA,QAAC,QAAI,sBAAY,SAAjB;AAAA;AAAA;AAAA;AAAA,iBAAuB;AAAA,UACvB,gBAAAA;AAAA,YAAC;AAAA;AAAA,cACC,KAAK,YAAY;AAAA,cACjB,KAAK,GAAG,YAAY;AAAA,cACpB,OAAO;AAAA,gBACL,cAAc;AAAA,gBACd,UAAU;AAAA;AAAA,cACZ;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAOA;AAAA,UACA,gBAAAA,QAAC,OAAE;AAAA;AAAA,YAAK,YAAY;AAAA,eAApB;AAAA;AAAA;AAAA;AAAA,iBAAuB;AAAA,UACvB,gBAAAA,QAAC,OAAE;AAAA;AAAA,YAAO,YAAY;AAAA,eAAtB;AAAA;AAAA;AAAA;AAAA,iBAA2B;AAAA,aAX7B;AAAA;AAAA;AAAA;AAAA,eAYA;AAAA,QACA,gBAAAA;AAAA,UAAC;AAAA;AAAA,YACC,IAAI,UAAU,OAAO,SAAS,OAAO,QAAQ,UAAU,OAAO,UAAU;AAAA,YACxE,OAAO;AAAA,cACL,WAAW;AAAA,cACX,SAAS;AAAA,cACT,UAAU;AAAA,cACV,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,cAAc;AAAA,cACd,UAAU;AAAA,cACV,WAAW;AAAA,cACX,gBAAgB;AAAA,cAChB,OAAO,aAAa,SAAS;AAAA,cAC7B,iBAAiB,aAAa,qBAAqB;AAAA,cACnD,YAAY;AAAA,YACd;AAAA,YACA,cAAc;AAAA,YACd,cAAc;AAAA,YACf;AAAA;AAAA,UAlBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAoBA;AAAA;AAAA;AAAA,IAjDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAkDA;AAEJ,GAEO,mBAAQ;;;AM3Ef,SAAS,uBAAuB;AAChC,SAAS,gBAAgB;;;ACCzB,SAAS,eAAAC,oBAAmB;;;ACF5B,SAA+B,aAAa,eAAAC,oBAAmB;AAExD,IAAM,iBAAiB,MAAM,YAAyB;;;ADezD,mBAAAC,eAAA;AATJ,IAAM,cAAwB,MAAM;AAClC,MAAM,SAASC,aAAY,gBAAgB,GACrC,WAAW,eAAe,GAE1B,cAAc,MAAM;AACxB,aAAS,SAAS,CAAC;AAAA,EACrB;AAEA,SACE,gBAAAD;AAAA,IAAC;AAAA;AAAA,MACC,OAAO,SAAS,EAAE,GAAG,OAAO,QAAQ,GAAG,OAAO,WAAW,IAAI,OAAO;AAAA,MACpE,SAAS;AAAA,MACV;AAAA;AAAA,QACe,SAAS,SAAS;AAAA;AAAA;AAAA,IAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAKA;AAEJ,GAEM,SAAwC;AAAA,EAC5C,QAAQ;AAAA,IACN,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,OAAO;AAAA,EACT;AAAA,EACA,YAAY;AAAA,IACV,iBAAiB;AAAA,IACjB,OAAO;AAAA,EACT;AACF,GAEO,sBAAQ;;;AE1Cf,SAAS,iBAAiB;AAK1B,SAAS,eAAAE,oBAAmB;;;ACHrB,IAAM,+BAA+B,CAAC,QAAgB,UAAkB,CAAC,aAA0B;AACzG,WAAS,mBAAmB,EAAE,QAAQ,MAAM,CAAC,CAAC;AAC/C;AAIO,IAAM,2BAA2B,MAAM,CAAC,aAA0B;AACxE,WAAS,YAAY,CAAC;AACvB,GACa,2BAA2B,MAAM,CAAC,aAA0B;AACxE,WAAS,YAAY,CAAC;AACvB,GACa,wBAAwB,CAAC,UAAkB,CAAC,aAA0B;AAClF,WAAS,aAAa,KAAK,CAAC;AAC7B;;;ADNA,SAAS,aAAa,mBAAmB;AAGzC,IAAM,SAAS,MAAM;AACpB,MAAM,WAAW,YAAY,GACvB,WAAW,YAAY,GACvB,WAAW,eAAe,GAC1B,eAAeC,aAAY,cAAc,GAE1C,UAAU,CAAC,MAAc,UAAkB;AAG7C,QAAM,SAAS,IAAI,gBAAgB,SAAS,MAAM;AAElD,WAAO,IAAI,QAAQ,OAAO,IAAI,CAAC,GAE3B,QACA,OAAO,IAAI,SAAS,KAAK,IAEzB,OAAO,OAAO,OAAO,GAGzB,SAAS,IAAI,OAAO,SAAS,GAAG,GAChC,QAAQ,IAAI,iBAAiB,IAAI,OAAO,SAAS,GAAG;AAAA,EACxD,GAOM,kBAAkB,MAAmB;AACvC,QAAM,SAAS,IAAI,gBAAgB,SAAS,MAAM,GAE5C,OAAO,SAAS,OAAO,IAAI,MAAM,KAAK,KAAK,EAAE,GAC7C,QAAQ,OAAO,IAAI,OAAO,KAAK;AAErC,WAAO,EAAE,MAAM,MAAM;AAAA,EACzB;AAEA,mBAAU,MAAM;AAChB,QAAM,SAAU,gBAAgB;AAC9B,YAAQ,OAAO,OAAO,IAAI,GAAG,OAAO,OAAO,KAAK,CAAC,GACjD,aAAa,QAAQ,eAAe,OAAO,OAAO,KAAK,CAAC,GACxD,SAAS,6BAA6B,OAAO,OAAO,IAAI,GAAG,OAAO,OAAO,KAAK,CAAC,CAAC;AAAA,EACjF,GAAG,CAAC,CAAC,GAgBE;AAAA,IAAI;AAAA,IAAS,aAbA,CAAC,UAA+C;AACnE,eAAS,sBAAsB,MAAM,OAAO,KAAK,CAAC;AAAA,IACnD;AAAA,IAYE,cAXmB,MAAM;AAC1B,aAAO,SAAS,GAAG,CAAC,GACpB,SAAS,6BAA6B,GAAG,aAAa,KAAK,CAAC;AAC5D,UAAM,SAAS,IAAI,gBAAgB,SAAS,MAAM;AAClD,aAAO,IAAI,QAAQ,OAAO,CAAC,CAAC,GAC5B,OAAO,IAAI,SAAS,OAAO,aAAa,KAAK,CAAC,GAG9C,SAAS,IAAI,OAAO,SAAS,GAAG;AAAA,IACjC;AAAA,EAGC;AACF,GACO,iBAAQ;;;AHvEf,SAAS,eAAAC,oBAAmB;AAE5B,SAAS,QAAAC,aAAY;AAWX,mBAAAC,eAAA;AARV,IAAM,SAAS,MAAM;AACnB,MAAM,SAASC,aAAY,gBAAgB,GACrC,EAAE,aAAa,aAAa,IAAI,eAAO;AAE7C,SACE,gBAAAD,QAAC,YAAO,OAAO,EAAE,GAAGE,QAAO,QAAQ,GAAI,SAASA,QAAO,aAAa,CAAC,EAAG,GACtE,0BAAAF,QAAC,SAAI,OAAOE,QAAO,SACjB;AAAA,oBAAAF,QAAC,SAAI,OAAOE,QAAO,QACjB;AAAA,sBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,OAAOE,QAAO;AAAA,UACd,aAAY;AAAA,UACZ,UAAU;AAAA;AAAA,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAIyB;AAAA,MAEzB,gBAAAF;AAAA,QAAC;AAAA;AAAA,UACC,OAAOE,QAAO;AAAA,UACd,SAAS;AAAA,UACT,cAAW;AAAA,UAEX,0BAAAF,QAAC,mBAAgB,MAAM,YAAvB;AAAA;AAAA;AAAA;AAAA,iBAAiC;AAAA;AAAA,QALnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA;AAAA,SAbF;AAAA;AAAA;AAAA;AAAA,WAcA;AAAA,IAEA,gBAAAA,QAACD,OAAA,EAAK,IAAG,YAAW,OAAOG,QAAO,aAAa,0CAA/C;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,gBAAAF,QAAC,yBAAD;AAAA;AAAA;AAAA;AAAA,WAAa;AAAA,OApBf;AAAA;AAAA;AAAA;AAAA,SAqBA,KAtBF;AAAA;AAAA;AAAA;AAAA,SAuBA;AAEJ,GAEME,UAAwC;AAAA,EAC5C,QAAQ;AAAA,IACN,OAAO;AAAA,IACP,iBAAiB;AAAA,IACjB,UAAU;AAAA,IACV,KAAK;AAAA,IACL,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,YAAY;AAAA,EACd;AAAA,EACA,SAAS;AAAA,IACP,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,SAAS;AAAA,EACX;AAAA,EACA,QAAQ;AAAA,IACN,UAAU;AAAA,IACV,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AAAA,EACA,YAAY;AAAA,IACV,iBAAiB;AAAA,EACnB;AAAA,EACA,WAAW;AAAA,IACT,OAAO;AAAA,IACP,SAAS;AAAA,EACX;AAAA,EACA,WAAW;AAAA,IACT,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,QAAQ;AAAA,IACR,iBAAiB;AAAA,EACnB;AAAA,EACA,aAAa;AAAA,IACX,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,OAAO;AAAA,EACT;AACF,GAEO,iBAAQ;;;AKnFR,IAAM,sBAAsB,CAAC,SAAmB,CAAC,aAA0B;AACjF,WAAS,sBAAsB,IAAI,CAAC;AACrC;;;ACFA,SAAS,eAAAC,oBAAmB;;;ACFrB,IAAM,sBAAsB,CAAC,UAAqB,MAAM,sBAAsB,kBAAkB,CAAC;;;ADMxG,SAAS,eAAAC,cAAa,eAAAC,oBAAmB;AA+BjC,mBAAAC,eAAA;AA3BR,IAAM,OAA2B,CAAC,EAAE,KAAK,MAAM;AAC7C,MAAM,WAAW,eAAe,GAC1B,SAASC,aAAY,gBAAgB,GACrC,QAAQA,aAAY,mBAAmB,GACvC,SAASA,aAAY,cAAc,GACnC,WAAWC,aAAY,GACvB,WAAWC,aAAY,GAEvB,uBAAuB,MAAM;AACjC,aAAS,oBAAoB,IAAI,CAAC;AAAA,EACpC,GAEM,qBAAqB,MAAM;AAClC,YAAQ,IAAI,EAAE;AACX,QAAM,cAAc,IAAI,gBAAgB;AACxC,gBAAY,OAAO,QAAQ,OAAO,OAAO,MAAM,CAAC,GAC5C,OAAO,SACT,YAAY,OAAO,SAAS,OAAO,KAAK,GAE1C,YAAY,OAAO,QAAQ,KAAK,KAAK,GAErC,SAAS,YAAY,YAAY,SAAS,KAAK,EAAE,OAAO,EAAE,MAAM,SAAS,EAAE,CAAC;AAAA,EAC9E;AAEA,SACE,gBAAAH,QAAC,SAAI,OAAOI,QAAO,UACjB,0BAAAJ,QAAC,SAAI,OAAO,EAAE,GAAGI,QAAO,MAAM,GAAI,SAASA,QAAO,WAAW,CAAC,EAAG,GAC/D;AAAA,oBAAAJ,QAAC,SAAI,WAAU,cAAa,KAAK,KAAK,YAAY,KAAI,QAAO,OAAOI,QAAO,YAA3E;AAAA;AAAA;AAAA;AAAA,WAAqF;AAAA,IACrF,gBAAAJ,QAAC,SAAI,OAAOI,QAAO,aACjB;AAAA,sBAAAJ,QAAC,OAAE,OAAOI,QAAO,WAAY,eAAK,SAAlC;AAAA;AAAA;AAAA;AAAA,aAAwC;AAAA,MACxC,gBAAAJ;AAAA,QAAC;AAAA;AAAA,UACC,MAAK;AAAA,UACL,OAAOI,QAAO;AAAA,UACd,UAAU;AAAA,UACV,SAAS,SAAS,MAAM,KAAK,CAAC,eAAe,KAAK,OAAO,WAAW,EAAE;AAAA,UACtE,UAAQ;AAAA;AAAA,QALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA;AAAA,MACA,gBAAAJ,QAAC,YAAO,SAAS,oBAAoB,OAAOI,QAAO,aAAa,4BAAhE;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SAXF;AAAA;AAAA;AAAA;AAAA,WAYA;AAAA,OAdF;AAAA;AAAA;AAAA;AAAA,SAeA,KAhBF;AAAA;AAAA;AAAA;AAAA,SAiBA;AAEJ,GAEMA,UAAwC;AAAA,EAC5C,UAAU;AAAA,IACR,gBAAgB;AAAA,IAChB,OAAO;AAAA,EACT;AAAA,EACA,MAAM;AAAA,IACJ,SAAS;AAAA,IACT,UAAU;AAAA,IACV,iBAAiB;AAAA,IACjB,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,YAAY;AAAA,IACZ,QAAQ;AAAA,EACV;AAAA,EACA,UAAU;AAAA,IACR,cAAc;AAAA,IACd,UAAU;AAAA,EACZ;AAAA,EACA,UAAU;AAAA,IACR,iBAAiB;AAAA,IACjB,OAAO;AAAA,EACT;AAAA,EACA,aAAa;AAAA,IACX,SAAS;AAAA,IACT,eAAe;AAAA,IACf,gBAAgB;AAAA,IAChB,QAAQ;AAAA,IACR,YAAY;AAAA,EACd;AAAA,EACA,WAAW;AAAA,IACT,UAAU;AAAA,IACV,YAAY;AAAA,EACd;AAAA,EACA,cAAc;AAAA,IACZ,UAAU;AAAA,IACV,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,EACd;AAAA,EACA,mBAAmB;AAAA,IACjB,iBAAiB;AAAA,EACnB;AAAA,EACA,aAAa;AAAA,IACX,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,iBAAiB;AAAA,IACjB,QAAQ;AAAA,IACR,OAAO;AAAA,EACT;AAAA,EACA,kBAAkB;AAAA,IAChB,iBAAiB;AAAA,IACjB,OAAO;AAAA,EACT;AACF,GAEO,eAAQ;;;AEnHf,SAAS,eAAAC,oBAAmB;;;ACHrB,IAAM,mBAAmB,CAAC,UAAqB,MAAM,SAAS;;;ACA9D,IAAM,oBAAoB,CAAC,UAAqB,MAAM,SAAS;;;AFoChD,mBAAAC,eAAA;AAtBtB,IAAM,OAAiB,MAAM;AAC3B,MAAM,EAAE,QAAQ,IAAI,eAAO,GACrB,WAAW,eAAe,GAC1B,QAAQC,aAAY,gBAAgB,GACpC,SAASA,aAAY,cAAc,GACnC,YAAYA,aAAY,iBAAiB,GAEzC,aAAa,MAAM;AACvB,WAAO,SAAS,GAAG,CAAC,GACpB,SAAS,yBAAyB,CAAC,GACnC,QAAQ,OAAO,SAAS,GAAG,OAAO,KAAK;AAAA,EACzC,GAEM,aAAa,MAAM;AACvB,WAAO,SAAS,GAAG,CAAC,GACpB,SAAS,yBAAyB,CAAC,GACnC,QAAQ,OAAO,SAAS,GAAG,OAAO,KAAK;AAAA,EACzC;AAEA,SACE,gBAAAD,QAAC,aAAQ,OAAOE,QAAO,MACrB,0BAAAF,QAAC,SAAI,OAAOE,QAAO,WAChB;AAAA,iBAAa,gBAAAF,QAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,WAAS;AAAA,IACtB,MAAM,IAAI,CAAC,SACV,gBAAAA,QAAC,gBAAK,MAAM,QAAW,KAAK,IAA5B;AAAA;AAAA;AAAA;AAAA,WAAgC,CACjC;AAAA,IACA,MAAM,WAAW,KAAK,gBAAAA,QAAC,OAAE,OAAOE,QAAO,SAAS,6BAA1B;AAAA;AAAA;AAAA;AAAA,WAAuC;AAAA,IAC9D,gBAAAF,QAAC,SAAI,OAAOE,QAAO,MACjB;AAAA,sBAAAF,QAAC,YAAO,OAAOE,QAAO,KAAK,SAAS,YAAY,oBAAhD;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MACA,gBAAAF,QAAC,YAAO,OAAO,EAAE,GAAGE,QAAO,KAAK,GAAGA,QAAO,KAAK,GAAG,SAAS,YAAY,eAAY,QAAO,oBAA1F;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SANF;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,OAbF;AAAA;AAAA;AAAA;AAAA,SAcA,KAfF;AAAA;AAAA;AAAA;AAAA,SAgBA;AAEJ,GAEMA,UAAwC;AAAA,EAC5C,MAAM;AAAA,IACJ,WAAW;AAAA,EACb;AAAA,EACA,WAAW;AAAA;AAAA,EAEX;AAAA,EACA,MAAM;AAAA,IACJ,SAAS;AAAA,IACT,WAAW;AAAA,IACX,gBAAgB;AAAA,IAChB,WAAW;AAAA,EACb;AAAA,EACA,KAAK;AAAA,IACH,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,YAAY;AAAA,IACZ,UAAU;AAAA,IACV,iBAAiB;AAAA,IACjB,QAAQ;AAAA,EACV;AAAA,EACA,MAAM;AAAA;AAAA,EAEN;AAAA,EACA,UAAU;AAAA,IACR,iBAAiB;AAAA,IACjB,OAAO;AAAA,EACT;AAAA,EACA,SAAS;AAAA,IACP,UAAU;AAAA,IACV,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,gBAAgB;AAAA,EAClB;AAAA,EACA,OAAO;AAAA,IACL,UAAU;AAAA,IACV,WAAW;AAAA,EACb;AACF,GAEO,eAAQ;;;AG7Ff,SAAS,aAAAC,kBAAiB;AAC1B,SAAS,eAAAC,qBAAmB;;;ACH5B,SAAgB,YAAAC,iBAAgB;;;ACEzB,IAAM,mCAAmC,MAAM,CAAC,aAA0B;AAChF,WAAS,uBAAuB,CAAC;AAClC;;;ADDA,SAAS,eAAAC,oBAAmB;AAiCtB,mBAAAC,eAAA;AA9BN,IAAM,oBAA8B,MAAM;AACxC,MAAM,WAAW,eAAe,GAC1B,QAAQC,aAAY,mBAAmB,GACvC,CAAC,KAAK,MAAM,IAAIC,UAA6B,GAE7C,cAAc,MAAM;AACxB,aAAS,iCAAiC,CAAC;AAAA,EAC7C,GAEM,iBAAiB,MAAM;AAC3B,QAAI,MAAM,WAAW;AAAG;AAGxB,QAAM,cAAc,CADF,OAAO,KAAK,MAAM,CAAC,CAAC,CACR;AAC9B,UAAM,QAAQ,CAAC,SAAS;AACtB,kBAAY,KAAK,OAAO,OAAO,IAAI,EAAE,IAAI,CAAC,UAAU,OAAO,KAAK,CAAC,CAAC;AAAA,IACpE,CAAC;AAED,QAAI,aAAa;AACjB,gBAAY,QAAQ,CAAC,QAAQ;AAC3B,oBAAc,IAAI,KAAK,GAAG,IAAI;AAAA;AAAA,IAChC,CAAC;AAED,QAAM,OAAO,IAAI,KAAK,CAAC,UAAU,GAAG,EAAE,MAAM,yBAAyB,CAAC,GAChEC,OAAM,IAAI,gBAAgB,IAAI;AACpC,WAAOA,IAAG;AAAA,EACZ;AAEA,SACE,gBAAAH,QAAC,SAAI,OAAOI,QAAO,OACjB;AAAA,oBAAAJ,QAAC,OAAE,OAAOI,QAAO,MAAM;AAAA;AAAA,MAAW,MAAM;AAAA,MAAO;AAAA,SAA/C;AAAA;AAAA;AAAA;AAAA,WAAqD;AAAA,IACrD,gBAAAJ,QAAC,SAAI,OAAOI,QAAO,SACjB;AAAA,sBAAAJ;AAAA,QAAC;AAAA;AAAA,UACC,OAAO,EAAE,GAAGI,QAAO,QAAQ,GAAGA,QAAO,cAAc;AAAA,UACnD,MAAM;AAAA,UACN,UAAU,GAAG,MAAM;AAAA,UACnB,SAAS;AAAA,UACV;AAAA;AAAA,QALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOA;AAAA,MACA,gBAAAJ;AAAA,QAAC;AAAA;AAAA,UACC,OAAO,EAAE,GAAGI,QAAO,QAAQ,GAAGA,QAAO,YAAY;AAAA,UACjD,SAAS;AAAA,UACV;AAAA;AAAA,QAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKA;AAAA,SAdF;AAAA;AAAA;AAAA;AAAA,WAeA;AAAA,OAjBF;AAAA;AAAA;AAAA;AAAA,SAkBA;AAEJ,GAEMA,UAA8C;AAAA,EAClD,OAAO;AAAA,IACL,SAAS;AAAA,IACT,UAAU;AAAA,IACV,QAAQ;AAAA,IACR,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,iBAAiB;AAAA,IACjB,cAAc;AAAA,EAChB;AAAA,EACA,SAAS;AAAA,IACP,SAAS;AAAA,IACT,WAAW;AAAA,EACb;AAAA,EACA,QAAQ;AAAA,IACN,QAAQ;AAAA,IACR,QAAQ;AAAA,IACR,SAAS;AAAA,IACT,UAAU;AAAA,IACV,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,OAAO;AAAA,EACT;AAAA,EACA,MAAM;AAAA,IACJ,UAAU;AAAA,EACZ;AAAA,EACA,eAAe;AAAA,IACb,iBAAiB;AAAA,IACjB,OAAO;AAAA,EACT;AAAA,EACA,aAAa;AAAA,IACX,iBAAiB;AAAA,IACjB,OAAO;AAAA,EACT;AACF,GAEO,mCAAQ;;;AE7Ff,SAAS,eAAAC,oBAAmB;AAmB1B,mBAAAC,gBAAA;AAhBF,IAAM,aAAa,MAAM;AAGxB,MAAM,kBAAiC;AAAA,IACtC,iBAHcC,aAAY,gBAAgB,IAGhB,oBAAoB;AAAA,IAC9C,OAAO;AAAA,IACP,WAAW;AAAA,IACX,QAAQ;AAAA,IACR,UAAU;AAAA,IACV,MAAM;AAAA,IACN,KAAK;AAAA,IACL,QAAQ;AAAA,IACR,YAAY;AAAA,EACb;AAEA,SACC,gBAAAD,SAAC,SAAI,OAAO,iBAAiB,eAAY,cACvC,iBADF;AAAA;AAAA;AAAA;AAAA,SAEA;AAEF,GAEO,qBAAQ;;;ACxBR,IAAM,uCAAuC,CAAC,UAAkB,CAAC,aAA0B;AACjG,WAAS,6BAA6B,KAAK,CAAC;AAC7C;;;AJyBE,qBAAAE,WAGC,UAAAC,gBAHD;AAdF,IAAMC,OAAM,MAAM;AACjB,MAAM,WAAW,eAAe,GAC1B,cAAcC,cAAY,mBAAmB,GAC7C,YAAYA,cAAY,iBAAiB;AAC/C,SAAAC,WAAU,MAAM;AACf;AAAA,MACC;AAAA,QACC,OAAO,aAAa,QAAQ,aAAa,KAAK,OAAO,aAAa,QAAQ,aAAa,IAAI,EAAE;AAAA,MAC9F;AAAA,IACD;AAAA,EACD,GAAG,CAAC,CAAC,GAIJ,gBAAAH,SAAAD,WAAA,EAEC;AAAA,oBAAAC,SAAC,SAAI,WAAU,aACf;AAAA,sBAAAA,SAAC,oBAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACP,gBAAAA,SAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACL,YAAY,SAAS,KAAK,gBAAAA,SAAC,sCAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,SAH/C;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,gBAAAA,SAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,WAAY;AAAA,OARb;AAAA;AAAA;AAAA;AAAA,SAYA;AAEF,GAEO,cAAQC;;;AlBnCf,SAAS,qBAAqB;AA8DtB,qBAAAG,WAIY,UAAAC,gBAJZ;AAjCR,eAAsB,OAAO,EAAE,QAAQ,GAAyB;AAC5D,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG,GACzB,SAAS,IAAI,gBAAgB,IAAI,MAAM,GACvC,QAAQ,OAAO,IAAI,OAAO,KAAK,aAC/B,OAAO,SAAS,OAAO,IAAI,MAAM,KAAK,KAAK,EAAE,GAC7C,QAAQ,SAAS,OAAO,IAAI,OAAO,KAAK,MAAM,EAAE,GAChD,WAAW,OAAO,IAAI,MAAM;AAClC,MAAI;AACA,QAAM,SAAS,gCAAgC,YAEzC,QAD2C,MAAM,MAAM,IAAI,MAAM,GACjD;AACtB,mBAAQ,IAAI,IAAI,GACT,EAAE,MAAM,OAAO,MAAM,MAAM;AAAA,EACtC,SAAS,OAAP;AACE,WAAI,MAAM,aAAa,KAAK,IACxB,QAAQ,MAAM,wBAAwB,MAAM,OAAO,IAEnD,QAAQ,MAAM,kBAAkB,KAAK,GAElC,EAAE,MAAM,CAAC,GAAG,OAAO,IAAI,MAAM,GAAG,OAAO,GAAG;AAAA,EAErD;AACJ;AACA,IAAM,UAAU,MAAM;AAClB,MAAM,EAAE,KAAK,IAAI,cAA0B,GACrC,UAAU,eAAe;AAE/B,EAAAC,WAAU,MAAM;AACZ,YAAQ,eAAe,IAAI,CAAC;AAAA,EAChC,GAAG,CAAC,IAAI,CAAC;AACT,MAAM,EAAE,MAAM,IAAI,cAAc;AAChC,iBAAQ,IAAI,KAAK,GAEb,gBAAAD,SAAAD,WAAA,EAEK;AAAA,cAAU,aACP,gBAAAC,SAAC,SAAI,OAAO,EAAE,OAAO,QAAQ,QAAQ,SAAS,UAAU,YAAY,QAAQ,UAAU,SAAS,QAAQ,YAAY,UAAU,gBAAgB,SAAS,GAClJ,0BAAAA,SAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,WAAS,KADb;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IAGJ,gBAAAA,SAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,WAAK;AAAA,IACL,gBAAAA,SAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,WAAY;AAAA,IACZ,gBAAAA,SAAC,sBAAD;AAAA;AAAA;AAAA;AAAA,WAAU;AAAA,OAXd;AAAA;AAAA;AAAA;AAAA,SAaA;AAER,GAEO,kBAAQ;;;AuBzFf;AAAA;AAAA;AAAA,gBAAAE;AAAA;AACA,SAAgB,aAAAC,kBAAiB;AACjC,OAAOC,YAA8B;AACrC,SAAS,iBAAAC,sBAAqB;;;ACAvB,IAAM,wBAAwB,CAAC,SAAwB,CAAC,aAA0B;AACxF,WAAS,SAAS,IAAI,CAAC;AACxB;;;ADMC,SAAS,iBAAAC,sBAAqB;AAqE5B,qBAAAC,WAIC,UAAAC,gBAJD;AArCH,eAAsBC,QAAO,EAAE,QAAQ,GAAyB;AAC9D,MAAM,MAAM,IAAI,IAAI,QAAQ,GAAG,GACzB,SAAS,IAAI,gBAAgB,IAAI,MAAM,GACvC,QAAQ,OAAO,IAAI,OAAO,KAAK,aAC/B,OAAO,SAAS,OAAO,IAAI,MAAM,KAAK,KAAK,EAAE,GAC7C,QAAQ,SAAS,OAAO,IAAI,OAAO,KAAK,MAAM,EAAE;AAEtD,MAAI;AACF,QAAM,SAAS,yCAAyC,cAAc,iBAAiB,SAEjF,SADoD,MAAMC,OAAM,IAAI,MAAM,GACzD,KAAK;AAChC,mBAAQ,IAAI,KAAK,GACN,EAAE,OAAO,OAAO,MAAM,MAAM;AAAA,EACrC,SAAS,OAAP;AACA,WAAIA,OAAM,aAAa,KAAK,IAC1B,QAAQ,MAAM,wBAAwB,MAAM,OAAO,IAEnD,QAAQ,MAAM,kBAAkB,KAAK,GAEhC,EAAE,OAAO,CAAC,GAAG,OAAO,IAAI,MAAM,GAAG,OAAO,GAAG;AAAA,EAEpD;AACF;AAEe,SAAR,QAAyB;AAC9B,MAAM,EAAE,MAAM,IAAIC,eAA0B,GACtC,WAAW,eAAe;AAEhC,EAAAC,WAAU,MAAM;AACd,IAAI,MAAM,SAAS,KACjB,SAAS,sBAAsB,KAAK,CAAC;AAAA,EAEzC,GAAG,CAAC,OAAO,QAAQ,CAAC;AACpB,MAAM,EAAE,MAAM,IAAIC,eAAc;AAChC,iBAAQ,IAAI,KAAK,GAGhB,gBAAAL,SAAAD,WAAA,EAEI;AAAA,cAAU,aACb,gBAAAC,SAAC,SAAI,OAAO,EAAC,OAAO,QAAQ,QAAQ,SAAQ,UAAU,YAAY,QAAQ,UAAU,SAAS,QAAQ,YAAY,UAAU,gBAAgB,SAAQ,GACnJ,0BAAAA,SAAC,qBAAD;AAAA;AAAA;AAAA;AAAA,WAAS,KADT;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IAGE,gBAAAA;AAAA,MAAC;AAAA;AAAA,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACE;AAAA,IACF,gBAAAA,SAAC,wBAAD;AAAA;AAAA;AAAA;AAAA,WAAY;AAAA,OAXf;AAAA;AAAA;AAAA;AAAA,SAYG;AAGN;;;AE/FA;AAAA;AAAA;AAAA;;;ACAA,SAAS,eAAAM,oBAAmB;AAUtB,mBAAAC,gBAAA;AAPN,IAAM,WAAqB,MAAM;AAC/B,MAAM,WAAWD,aAAY,GACvB,uBAAuB,MAAM;AACjC,aAAS,GAAG;AAAA,EACd;AACA,SACE,gBAAAC,SAAC,SAAI,OAAOC,QAAO,KAAK,eAAY,aAClC;AAAA,oBAAAD,SAAC,OAAE,OAAOC,QAAO,OAAO,mBAAxB;AAAA;AAAA;AAAA;AAAA,WAA2B;AAAA,IAC3B,gBAAAD,SAAC,OAAE,OAAOC,QAAO,MAAM,kCAAvB;AAAA;AAAA;AAAA;AAAA,WAAyC;AAAA,IACzC,gBAAAD,SAAC,YAAO,SAAS,sBAAsB,OAAOC,QAAO,QAAQ,gCAA7D;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OALF;AAAA;AAAA;AAAA;AAAA,SAMA;AAEJ,GAEMA,UAA8C;AAAA,EAClD,KAAK;AAAA,IACH,SAAS;AAAA,IACT,YAAY;AAAA,IACZ,gBAAgB;AAAA,IAChB,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACA,OAAO;AAAA,IACL,UAAU;AAAA,EACZ;AAAA,EACA,MAAM;AAAA,IACJ,UAAU;AAAA,EACZ;AAAA,EACA,QAAQ;AAAA,IACN,WAAW;AAAA,IACX,SAAS;AAAA,IACT,QAAQ;AAAA,IACR,cAAc;AAAA,IACd,UAAU;AAAA,IACV,YAAY;AAAA,IACZ,iBAAiB;AAAA,IACjB,OAAO;AAAA,IACP,QAAQ;AAAA,IACR,gBAAgB;AAAA,EAClB;AAAA,EACA,aAAa;AAAA,IACX,iBAAiB;AAAA,IACjB,OAAO;AAAA,EACT;AACF,GAEO,mBAAQ;;;ADhDF,qBAAAC,WAGX,UAAAC,gBAHW;AADb,IAAM,UAAU,MACH,gBAAAA,SAAAD,WAAA,EACT,0BAAAC,SAAC,SAAK,eAAY,aAEpB,0BAAAA,SAAC,sBAAD;AAAA;AAAA;AAAA;AAAA,OAAU,KAFR;AAAA;AAAA;AAAA;AAAA,OAGA,KAJS;AAAA;AAAA;AAAA;AAAA,OAKT,GAGG,YAAQ;;;AEXf,IAAO,0BAAQ,EAAC,OAAQ,EAAC,QAAS,mCAAkC,SAAU,CAAC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,oCAAmC,kCAAkC,EAAC,GAAE,QAAS,EAAC,MAAO,EAAC,IAAK,QAAO,UAAW,QAAU,MAAO,IAAG,OAAQ,QAAU,eAAgB,QAAU,QAAS,2BAA0B,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,YAAW,EAAC,IAAK,YAAW,UAAW,QAAO,MAAO,KAAI,OAAQ,QAAU,eAAgB,QAAU,QAAS,+BAA8B,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,iBAAgB,EAAC,IAAK,iBAAgB,UAAW,QAAO,MAAO,QAAU,OAAQ,IAAK,eAAgB,QAAU,QAAS,oCAAmC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,kBAAiB,EAAC,IAAK,kBAAiB,UAAW,QAAO,MAAO,WAAU,OAAQ,QAAU,eAAgB,QAAU,QAAS,qCAAoC,SAAU,CAAC,kCAAkC,GAAE,WAAY,IAAM,WAAY,IAAK,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,GAAE,yBAAwB,EAAC,IAAK,yBAAwB,UAAW,QAAO,MAAO,kBAAiB,OAAQ,QAAU,eAAgB,QAAU,QAAS,4CAA2C,SAAU,QAAU,WAAY,IAAM,WAAY,IAAM,iBAAkB,IAAM,iBAAkB,IAAM,kBAAmB,GAAK,EAAC,GAAE,SAAU,YAAW,KAAM,EAAC,SAAU,qCAAoC,WAAY,cAAa,GAAE,KAAM,8BAA6B;;;ACOrgE,IAAM,OAAO,eAEP,uBAAuB,iBACvB,SAAS,EAAC,mBAAoB,IAAM,sBAAuB,IAAM,qBAAsB,IAAM,sBAAuB,IAAM,6BAA8B,GAAK,GAC7J,aAAa,WACb,QAAQ,EAAE,QAAQ,qBAAY,GAC9B,SAAS;AAAA,EACpB,MAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,yBAAyB;AAAA,IACrB,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,kBAAkB;AAAA,IACd,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,iBAAiB;AAAA,IACb,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AAAA,EACF,YAAY;AAAA,IACR,IAAI;AAAA,IACJ,UAAU;AAAA,IACV,MAAM;AAAA,IACN,OAAO;AAAA,IACP,eAAe;AAAA,IACf,QAAQ;AAAA,EACV;AACF;",
  "names": ["createSlice", "initialState", "createSlice", "initialState", "jsxDEV", "useEffect", "jsxDEV", "jsxDEV", "useSelector", "useSelector", "jsxDEV", "useSelector", "useSelector", "useSelector", "useSelector", "Link", "jsxDEV", "useSelector", "styles", "useSelector", "useNavigate", "useLocation", "jsxDEV", "useSelector", "useNavigate", "useLocation", "styles", "useSelector", "jsxDEV", "useSelector", "styles", "useEffect", "useSelector", "useState", "useSelector", "jsxDEV", "useSelector", "useState", "url", "styles", "useSelector", "jsxDEV", "useSelector", "Fragment", "jsxDEV", "App", "useSelector", "useEffect", "Fragment", "jsxDEV", "useEffect", "loader", "useEffect", "axios", "useLoaderData", "useNavigation", "Fragment", "jsxDEV", "loader", "axios", "useLoaderData", "useEffect", "useNavigation", "useNavigate", "jsxDEV", "styles", "Fragment", "jsxDEV"]
}
